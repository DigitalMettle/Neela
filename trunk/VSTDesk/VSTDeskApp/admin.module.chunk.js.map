{"version":3,"sources":["E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/about-neela/about-neela.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/about-neela/about-neela.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/admin-list/admin-list.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/admin-list/admin-list.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/admin.module.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/admin.routes.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/company-settings/company-settings.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/company-settings/company-settings.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/dashboard/dashboard.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/dashboard/dashboard.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/index.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/invite-user/invite-user.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/invite-user/invite-user.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/project-settings/project-settings.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/project-settings/project-settings.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/user-details/user-details.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/user-details/user-details.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/user-list/user-list.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/user-list/user-list.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/work-item/addwork-item.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/work-item/addwork-item.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/workitemlist/workitem-list.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/workitemlist/workitem-list.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/workitemlist/workitem-listchild.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/workitemlist/workitem-listchild.component.ts"],"names":[],"mappings":"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","file":"admin.module.chunk.js","sourcesContent":["module.exports = \"Copyright (C) 2018 Digital Mettle, LLC, All Rights reserved\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/about-neela/about-neela.component.html\n// module id = ../../../../../src/app/Admin/about-neela/about-neela.component.html\n// module chunks = admin.module","import { Component } from \"@angular/core\";\r\n\r\n\r\n@Component({\r\n    selector: \"about-neela\",\r\n    templateUrl:\"./about-neela.component.html\"\r\n})\r\nexport class AboutNeelaComponent {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/about-neela/about-neela.component.ts","module.exports = \"<div class=\\\"user-list-conainer scroll-x\\\">\\r\\n    <h4 class=\\\"mb-3 t-header row-custom\\\">\\r\\n        <span class=\\\"col\\\">\\r\\n            {{'AdminModule.Label.User' | translate}}<span class=\\\"badge badge-secondary ml-1\\\">{{totalAdminUsers}}</span>\\r\\n        </span>\\r\\n        <span class=\\\"col\\\">\\r\\n            Email\\r\\n        </span>\\r\\n    </h4>\\r\\n    <ul class=\\\"list-group list-group-flush\\\">\\r\\n        <li class=\\\"list-group-item d-flex flex-row px-0 has-edit-button\\\" *ngFor=\\\"let user of adminUserList \\\">\\r\\n            <div class=\\\"row-custom\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <!--<div class=\\\"user-pic\\\" [ngStyle]=\\\"{'background-image': 'url(' + user.ProfilePhoto + ')'}\\\"></div>-->\\r\\n\\r\\n                    <div class=\\\"text\\\">\\r\\n                        <strong>{{user.FirstName}}</strong>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col col-50\\\">\\r\\n                    <strong>{{user.Email}}</strong>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"buttons-group-holder\\\">\\r\\n            </div>\\r\\n        </li>\\r\\n\\r\\n    </ul>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/admin-list/admin-list.component.html\n// module id = ../../../../../src/app/Admin/admin-list/admin-list.component.html\n// module chunks = admin.module","import {Component } from '@angular/core'\r\nimport { AdminService } from '../services/admin.service';\r\n\r\n@Component({\r\n    selector: 'admin-list',\r\n    templateUrl: 'admin-list.component.html'\r\n})\r\n\r\nexport class AdminListComponent {\r\n\r\n    adminUserList: any;\r\n    totalAdminUsers: any;\r\n\r\n    constructor(private adminService: AdminService) {\r\n\r\n    }\r\n    ngOnInit(): void {\r\n\r\n        this.adminService.getAdminUserList().subscribe(res => {\r\n            if (res) {\r\n                this.adminUserList = res.Data;\r\n                this.totalAdminUsers = this.adminUserList.length;\r\n            }\r\n        });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/admin-list/admin-list.component.ts","import {NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule  , FormsModule} from '@angular/forms';\r\nimport { AdminRouteModule } from './admin.routes'\r\nimport { CommonCustomModule } from '../common'\r\nimport { UploadModule } from '@progress/kendo-angular-upload';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { CKEditorModule } from 'ng2-ckeditor'\r\n\r\n\r\nimport { DashboardComponent, AdminListComponent, WorkItemComponent, ProjectSettingsComponent, AdminService, InviteUserComponent, UserListComponent, UserDetailsComponent, CompanySettingsComponent, WorkItemListComponent, WorkItemChildListComponent, AboutNeelaComponent } from './index';\r\n\r\n@NgModule({\r\n    imports: [AdminRouteModule, CKEditorModule, CommonCustomModule, CommonModule, ReactiveFormsModule, FormsModule, UploadModule, ChartsModule, GridModule],\r\n    declarations: [DashboardComponent, AdminListComponent, ProjectSettingsComponent, InviteUserComponent, UserListComponent, UserDetailsComponent, CompanySettingsComponent, WorkItemListComponent, WorkItemChildListComponent, WorkItemComponent, AboutNeelaComponent],\r\n    exports: [],\r\n    providers : [AdminService]\r\n})\r\n        \r\nexport class AdminModule {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/admin.module.ts","import { NgModule } from '@angular/core'\r\nimport {Routes , RouterModule } from '@angular/router'\r\nimport { DashboardComponent } from './dashboard/dashboard.component'\r\nimport { InviteUserComponent, UserListComponent, UserDetailsComponent, CompanySettingsComponent, ProjectSettingsComponent, WorkItemListComponent, WorkItemComponent, AboutNeelaComponent } from './index'\r\nimport { UserProfileComponent } from './../common'\r\n\r\n\r\nconst routes : Routes = [\r\n    { path: 'dashboard', component: DashboardComponent },\r\n    { path: 'projectsettings', component: ProjectSettingsComponent },\r\n    { path: 'inviteuser', component: InviteUserComponent },\r\n    { path: 'userlist', component: UserListComponent },\r\n    { path: 'userdetails', component: UserDetailsComponent},\r\n    { path: 'userprofile', component: UserProfileComponent },\r\n    { path: 'companysettings', component: CompanySettingsComponent },\r\n    { path: 'userworkitemlist', component: WorkItemListComponent },\r\n    { path: 'project/:projectId/workitem/add', component: WorkItemComponent, data: { isNew: true } },\r\n    { path: 'project/:projectId/workitem/:workitemId/edit', component: WorkItemComponent, data: { isNew: false } },\r\n    { path: 'about', component: AboutNeelaComponent},\r\n\r\n]\r\n\r\n@NgModule({\r\n imports : [RouterModule.forChild(routes)],\r\n exports :[ RouterModule ]\r\n})\r\n\r\nexport class AdminRouteModule{\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/admin.routes.ts","module.exports = \"<!--<h1 class=\\\"h4\\\">Company Settings</h1>-->\\r\\n<form [formGroup]=\\\"formData\\\">\\r\\n    <div class=\\\"card has-shadow company-settings\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-lg-4\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'AdminModule.Placeholder.EnterAppName' | translate}}\\\" formControlName=\\\"AppName\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['AppName'].touched && formData.controls['AppName'].invalid}\\\">\\r\\n                        <small class=\\\"text-muted\\\">{{'AdminModule.Label.AppName' | translate}}</small>\\r\\n                        <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['AppName'].touched && formData.controls['AppName'].hasError('required')\\\">\\r\\n                            <small>{{'AdminModule.Validations.AppName' | translate}}</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-control form-control-secondary\\\">{{'AdminModule.Label.CompanyLogo' | translate}}</div>\\r\\n    </div>-->\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"image-upload-container\\\">\\r\\n                            <div class=\\\"form-control form-control-secondary\\\">{{'AdminModule.Label.CompanyLogo' | translate}}</div>\\r\\n                                <div class=\\\"form-group upload-img-box\\\">\\r\\n                                    <div class=\\\"picture-block border\\\">\\r\\n                                        <img src=\\\"{{formData.get('CompanyLogo').value}}\\\" /> <!--alt=\\\"../../../assets/img/logo_dm.png\\\" />-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"action-block mt-4\\\">\\r\\n                                        <div class=\\\"upload-btn-holder\\\">\\r\\n                                            <div class=\\\"btn btn-primary\\\">\\r\\n                                                <kendo-upload accept=\\\".png,.jpg\\\" class=\\\"kendo-upload-file updatename\\\" [saveUrl]=\\\"profileImageUploadUrl\\\" (success)=\\\"uploadLogoSuccessEventHandler($event)\\\">\\r\\n                                                </kendo-upload>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"image-upload-container\\\">\\r\\n                            <div class=\\\"form-control form-control-secondary\\\">\\r\\n                                {{'AdminModule.Label.HeaderLogo' | translate}}</div>\\r\\n                                <div class=\\\"form-group upload-img-box\\\">\\r\\n                                    <div class=\\\"picture-block border\\\">\\r\\n                                        <img src=\\\"{{formData.get('HeaderLogo').value}}\\\" /> <!--alt=\\\"../../../assets/img/logo_dm.png\\\" />-->\\r\\n                                    </div>\\r\\n                                    <div class=\\\"action-block mt-4\\\">\\r\\n                                        <div class=\\\"upload-btn-holder\\\">\\r\\n                                            <div class=\\\"btn btn-primary\\\">\\r\\n                                                <kendo-upload accept=\\\".png,.jpg\\\" class=\\\"kendo-upload-file updatename\\\" [saveUrl]=\\\"headerLogoUploadUrl\\\" (success)=\\\"uploadHeaderLogoSuccessEventHandler($event)\\\">\\r\\n                                                </kendo-upload>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-4\\\">\\r\\n                    <!--<div class=\\\"form-group has-input-icon\\\">\\r\\n                        <div class=\\\"form-control form-control-secondary\\\">{{'AdminModule.Label.ADLoginSetup' | translate}}</div>\\r\\n                        <i class=\\\"material-icons rotate\\\" (mouseenter)=\\\"toggleElement(adLoginSetupToolTip)\\\" (mouseleave)=\\\"toggleElement(adLoginSetupToolTip)\\\">error</i>\\r\\n                        <div class=\\\"custom-tooltip\\\" #adLoginSetupToolTip hidden>\\r\\n                            AD Login Setup\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'AdminModule.Placeholder.EnterAppId' | translate}}\\\" formControlName=\\\"AppId\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['AppId'].touched && formData.controls['AppId'].invalid}\\\">\\r\\n                        <small class=\\\"text-muted\\\">{{'AdminModule.Label.AppId' | translate}}</small>\\r\\n                        <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['AppId'].touched && formData.controls['AppId'].hasError('required')\\\">\\r\\n                            <small>{{'AdminModule.Validations.AppId' | translate}}</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'AdminModule.Placeholder.EnterAppSecretKey' | translate}}\\\" formControlName=\\\"AppSecretKey\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['AppSecretKey'].touched && formData.controls['AppSecretKey'].invalid}\\\">\\r\\n                        <small class=\\\"text-muted\\\">{{'AdminModule.Label.AppSecretKey' | translate}}</small>\\r\\n                        <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['AppSecretKey'].touched && formData.controls['AppSecretKey'].hasError('required')\\\">\\r\\n                            <small>{{'AdminModule.Validations.AppSecretKey' | translate}}</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'AdminModule.Placeholder.EnterPersonalAccessToken' | translate}}\\\" formControlName=\\\"PersonalAccessToken\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['PersonalAccessToken'].touched && formData.controls['PersonalAccessToken'].invalid}\\\">\\r\\n                        <small class=\\\"text-muted\\\">{{'AdminModule.Label.PersonalAccessToken' | translate}}</small>\\r\\n                        <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['PersonalAccessToken'].touched && formData.controls['PersonalAccessToken'].hasError('required')\\\">\\r\\n                            <small>{{'AdminModule.Validations.PersonalAccessToken' | translate}}</small>\\r\\n                        </div>\\r\\n                    </div>-->\\r\\n                    <div class=\\\"form-group has-input-icon\\\">\\r\\n                        <div class=\\\"form-control form-control-secondary\\\">{{'AdminModule.Label.VSTSSettings' | translate}}</div>\\r\\n                        <i class=\\\"material-icons rotate\\\" (mouseenter)=\\\"toggleElement(vstsSettingsToolTip)\\\" (mouseleave)=\\\"toggleElement(vstsSettingsToolTip)\\\">error</i>\\r\\n                        <div class=\\\"custom-tooltip\\\" #vstsSettingsToolTip hidden>\\r\\n                            VSTS Settings\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'AdminModule.Placeholder.EnterSettingOne' | translate}}\\\" formControlName=\\\"SettingOne\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['SettingOne'].touched && formData.controls['SettingOne'].invalid}\\\">\\r\\n                        <small class=\\\"text-muted\\\">{{'AdminModule.Label.SettingOne' | translate}}</small>\\r\\n                        <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['SettingOne'].touched && formData.controls['SettingOne'].hasError('required')\\\">\\r\\n                            <small>{{'AdminModule.Validations.SettingOne' | translate}}</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'AdminModule.Placeholder.EnterSettingTwo' | translate}}\\\" formControlName=\\\"SettingTwo\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['SettingTwo'].touched && formData.controls['SettingTwo'].invalid}\\\">\\r\\n                        <small class=\\\"text-muted\\\">{{'AdminModule.Label.SettingTwo' | translate}}</small>\\r\\n                        <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['SettingTwo'].touched && formData.controls['SettingTwo'].hasError('required')\\\">\\r\\n                            <small>{{'AdminModule.Validations.SettingTwo' | translate}}</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-4\\\">\\r\\n                   \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"form-control form-control-secondary\\\">{{'AdminModule.Label.BackgroundForLoginScreen' | translate}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div class=\\\"image-upload-container\\\">\\r\\n                            \\r\\n                            <div class=\\\"form-group upload-img-box\\\">\\r\\n                                <div class=\\\"picture-block height-lg border\\\">\\r\\n                                    <img src=\\\"{{formData.get('BackgroundImageUrlForLogin').value}}\\\" />\\r\\n                                </div>\\r\\n                                <div class=\\\"action-block mt-4\\\">\\r\\n                                    <div class=\\\"upload-btn-holder\\\">\\r\\n                                        <div class=\\\"btn btn-primary\\\">\\r\\n                                            <kendo-upload accept=\\\".png,.jpg\\\" class=\\\"kendo-upload-file updatename\\\" [saveUrl]=\\\"backgroundImageForLoginUploadUrl\\\" (success)=\\\"loginImageSuccessEventHandler($event)\\\">\\r\\n                                            </kendo-upload>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"email-settings\\\">\\r\\n                <div class=\\\"form-control form-control-secondary\\\">\\r\\n                    {{'AdminModule.Label.HTMLEmailSettings' | translate}}</div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-4\\\">\\r\\n                            <div class=\\\"form-group has-input-icon\\\">\\r\\n                                <div class=\\\"form-control form-control-secondary\\\">{{'AdminModule.Label.SMTPSettings' | translate}}</div>\\r\\n                                <i class=\\\"material-icons rotate\\\" (mouseenter)=\\\"toggleElement(smtpSettingsToolTip)\\\" (mouseleave)=\\\"toggleElement(smtpSettingsToolTip)\\\">error</i>\\r\\n                                <div class=\\\"custom-tooltip\\\" #smtpSettingsToolTip hidden>\\r\\n                                    SMTP Settings\\r\\n                                </div>\\r\\n                                <!--<small class=\\\"text-muted\\\">{{'AdminModule.Label.AppName' | translate}}</small>-->\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input class=\\\"form-control\\\" placeholder=\\\"{{'AdminModule.Placeholder.EnterFromEmailAddress' | translate}}\\\" type=\\\"text\\\" formControlName=\\\"SMTPFromEmail\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['SMTPFromEmail'].touched && formData.controls['SMTPFromEmail'].invalid}\\\">\\r\\n                                <small class=\\\"text-muted\\\">{{'AdminModule.Label.FromEmailForFormField' | translate}}</small>\\r\\n                                <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['SMTPFromEmail'].touched && formData.controls['SMTPFromEmail'].hasError('required')\\\">\\r\\n                                    <small>{{'AdminModule.Validations.SMTPFromEmail' | translate}}</small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input class=\\\"form-control\\\" placeholder=\\\"{{'AdminModule.Placeholder.EnterFromName' | translate}}\\\" type=\\\"text\\\" formControlName=\\\"SMTPFromName\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['SMTPFromName'].touched && formData.controls['SMTPFromName'].invalid}\\\">\\r\\n                                <small class=\\\"text-muted\\\">{{'AdminModule.Label.FromNameForFormField' | translate}}</small>\\r\\n                                <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['SMTPFromName'].touched && formData.controls['SMTPFromName'].hasError('required')\\\">\\r\\n                                    <small>{{'AdminModule.Validations.SMTPFromName' | translate}}</small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input class=\\\"form-control\\\" placeholder=\\\"{{'AdminModule.Placeholder.EnterSMTPHost' | translate}}\\\" type=\\\"text\\\" formControlName=\\\"SMTPHostUrl\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['SMTPHostUrl'].touched && formData.controls['SMTPHostUrl'].invalid}\\\">\\r\\n                                <small class=\\\"text-muted\\\">{{'AdminModule.Label.SMTPHostMailServer' | translate}}</small>\\r\\n                                <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['SMTPHostUrl'].touched && formData.controls['SMTPHostUrl'].hasError('required')\\\">\\r\\n                                    <small>{{'AdminModule.Validations.SMTPHostUrl' | translate}}</small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <h6>{{'AdminModule.Label.TypeOfEncryption' | translate}} </h6>\\r\\n                            <div class=\\\"form-group form-radio-inline\\\">\\r\\n                                <div class=\\\"form-check radio-checkbox-custom\\\">\\r\\n                                    <label>\\r\\n                                        {{'AdminModule.Label.None' | translate}}\\r\\n                                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"None\\\" formControlName=\\\"EncryptionType\\\">\\r\\n                                        <span class=\\\"circle-check-mark\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-check radio-checkbox-custom\\\">\\r\\n                                    <label>\\r\\n                                        {{'AdminModule.Label.SSL' | translate}}\\r\\n                                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"SSL\\\" formControlName=\\\"EncryptionType\\\">\\r\\n                                        <span class=\\\"circle-check-mark\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-check radio-checkbox-custom\\\">\\r\\n                                    <label>\\r\\n                                        {{'AdminModule.Label.TLS' | translate}}\\r\\n                                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"TLS\\\" formControlName=\\\"EncryptionType\\\">\\r\\n                                        <span class=\\\"circle-check-mark\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <small class=\\\"text-muted d-block\\\">{{'AdminModule.Label.SSLRecommendedOption' | translate}}</small>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input class=\\\"form-control\\\" placeholder=\\\"{{'AdminModule.Placeholder.EnterSMTPPort' | translate}}\\\" type=\\\"text\\\" formControlName=\\\"SMTPPort\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['SMTPPort'].touched && formData.controls['SMTPPort'].invalid}\\\">\\r\\n                                <small class=\\\"text-muted\\\">{{'AdminModule.Label.SMTPPortToMailServer' | translate}}</small>\\r\\n                                <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['SMTPPort'].touched && formData.controls['SMTPPort'].hasError('required')\\\">\\r\\n                                    <small>{{'AdminModule.Validations.SMTPPort' | translate}}</small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <h6>{{'AdminModule.Label.SMTPAuthentication' | translate}}</h6>\\r\\n                            <div class=\\\"form-group form-radio-inline\\\">\\r\\n                                <div class=\\\"form-check radio-checkbox-custom\\\">\\r\\n                                    <label>\\r\\n                                        {{'AdminModule.Label.Yes' | translate}}\\r\\n                                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"Yes\\\" formControlName=\\\"SMTPAuthentication\\\">\\r\\n                                        <span class=\\\"circle-check-mark\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-check radio-checkbox-custom\\\">\\r\\n                                    <label>\\r\\n                                        {{'AdminModule.Label.No' | translate}}\\r\\n                                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"No\\\" formControlName=\\\"SMTPAuthentication\\\">\\r\\n                                        <span class=\\\"circle-check-mark\\\"></span>\\r\\n                                    </label>\\r\\n                                </div>\\r\\n\\r\\n                                <small class=\\\"text-muted d-block\\\">{{'AdminModule.Label.SMTPAuthentication' | translate}}</small>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input class=\\\"form-control\\\" placeholder=\\\"{{'AdminModule.Placeholder.SMTPUsername' | translate}}\\\" type=\\\"text\\\" formControlName=\\\"SMTPUserName\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['SMTPUserName'].touched && formData.controls['SMTPUserName'].invalid}\\\">\\r\\n                                <small class=\\\"text-muted\\\">{{'AdminModule.Label.MailServerLoginUsername' | translate}}</small>\\r\\n                                <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['SMTPUserName'].touched && formData.controls['SMTPUserName'].hasError('required')\\\">\\r\\n                                    <small>{{'AdminModule.Validations.SMTPUsername' | translate}}</small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input class=\\\"form-control\\\" placeholder=\\\"{{'AdminModule.Placeholder.SMTPPassword' | translate}}\\\" type=\\\"text\\\" formControlName=\\\"SMTPPassword\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['SMTPPassword'].touched && formData.controls['SMTPPassword'].invalid}\\\">\\r\\n                                <small class=\\\"text-muted d-block\\\">{{'AdminModule.Label.MailServerLoginPassword' | translate}}</small>\\r\\n                                <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['SMTPPassword'].touched && formData.controls['SMTPPassword'].hasError('required')\\\">\\r\\n                                    <small>{{'AdminModule.Validations.SMTPPassword' | translate}}</small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <!--<div class=\\\"btn-holder\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">{{'AdminModule.Label.SaveSmtpSettings' | translate}}</button>\\r\\n            </div>-->\\r\\n                        </div>\\r\\n                        <div class=\\\"col-lg-8 col-lg\\\">\\r\\n                            <div class=\\\"form-group has-input-icon\\\">\\r\\n                                <div class=\\\"form-control form-control-secondary\\\">{{'AdminModule.Label.InvitationEmailTemplate' | translate}}</div>\\r\\n                                <i class=\\\"material-icons rotate\\\" (mouseenter)=\\\"toggleElement(invitationEmailTemplateToolTip)\\\" (mouseleave)=\\\"toggleElement(invitationEmailTemplateToolTip)\\\">error</i>\\r\\n                                <div class=\\\"custom-tooltip\\\" #invitationEmailTemplateToolTip hidden>\\r\\n                                    Invitation Email Template\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input class=\\\"form-control\\\" placeholder=\\\"Enter Email Subject\\\" type=\\\"text\\\" formControlName=\\\"InvitationEmailSubject\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['InvitationEmailSubject'].touched && formData.controls['InvitationEmailSubject'].invalid}\\\">\\r\\n                                <small class=\\\"text-muted\\\">{{'AdminModule.Label.EmailSubjectLine' | translate}}</small>\\r\\n                                <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['InvitationEmailSubject'].touched && formData.controls['InvitationEmailSubject'].hasError('required')\\\">\\r\\n                                    <small>{{'AdminModule.Validations.InvitationEmailSubject' | translate}}</small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"f-w-b\\\">{{'AdminModule.Label.EmailMessage' | translate}}</label>\\r\\n                                <div class=\\\"textarea-holder\\\">\\r\\n                                    <!--<textarea class=\\\"form-control\\\" placeholder=\\\"WYSIWYG EDITOR\\\" rows=\\\"8\\\" formControlName=\\\"InvitationEmailMessage\\\"></textarea>-->\\r\\n                                    <ckeditor [config]=\\\"editorConfig.DiscriptionConfig\\\" formControlName=\\\"InvitationEmailMessage\\\"></ckeditor>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group has-input-icon\\\">\\r\\n                                <div class=\\\"form-control form-control-secondary\\\">{{'AdminModule.Label.PasswordResetEmailTemplate' | translate}}</div>\\r\\n                                <i class=\\\"material-icons rotate\\\" (mouseenter)=\\\"toggleElement(passwordResetEmailTemplateToolTip)\\\" (mouseleave)=\\\"toggleElement(passwordResetEmailTemplateToolTip)\\\">error</i>\\r\\n                                <div class=\\\"custom-tooltip\\\" #passwordResetEmailTemplateToolTip hidden>\\r\\n                                    Password Reset Email Template\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input class=\\\"form-control\\\" placeholder=\\\"Enter Email Subject\\\" type=\\\"text\\\" formControlName=\\\"PasswordResetEmailSubject\\\" [ngClass]=\\\"{'is-invalid' : formData.controls['PasswordResetEmailSubject'].touched && formData.controls['PasswordResetEmailSubject'].invalid}\\\">\\r\\n                                <small class=\\\"text-muted\\\">{{'AdminModule.Label.EmailSubjectLine' | translate}}</small>\\r\\n                                <div class=\\\"form-text text-danger padding-h\\\" *ngIf=\\\"formData.controls['PasswordResetEmailSubject'].touched && formData.controls['PasswordResetEmailSubject'].hasError('required')\\\">\\r\\n                                    <small>{{'AdminModule.Validations.PasswordResetEmailSubject' | translate}}</small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"f-w-b\\\">{{'AdminModule.Label.EmailMessage' | translate}}</label>\\r\\n                                <div class=\\\"textarea-holder\\\">\\r\\n                                    <!--<textarea class=\\\"form-control\\\" placeholder=\\\"WYSIWYG EDITOR\\\" rows=\\\"8\\\" formControlName=\\\"PasswordResetEmailMessage\\\"></textarea>-->\\r\\n                                    <ckeditor [config]=\\\"editorConfig.DiscriptionConfig\\\" formControlName=\\\"PasswordResetEmailMessage\\\"></ckeditor>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n                <label>{{'AdminModule.Label.CompanyMessage' | translate}}</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"CompanyMessage\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Company Logo</label>\\r\\n                <div class=\\\"upload-img-box d-flex flex-row justify-content-between rounded\\\">\\r\\n\\r\\n                    <div class=\\\"picture-block border rounded\\\">\\r\\n                        <img class=\\\"img-fluid\\\" src=\\\"{{companyLogo}}\\\" alt=\\\"Profile Picture\\\" />\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"action-block text-right\\\">\\r\\n                        <label>Upload/Change Image</label>\\r\\n                        <div class=\\\"upload-btn-holder\\\">\\r\\n                            <div class=\\\"btn btn-dark\\\">\\r\\n                                <kendo-upload accept=\\\".png,.jpg\\\" class=\\\"kendo-upload-file\\\" [saveUrl]=\\\"uploadSaveUrl\\\" (success)=\\\"successEventHandler($event)\\\">\\r\\n                                </kendo-upload>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary mt-2\\\" (click)=\\\"saveCompanySettings()\\\">Update</button>-->\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/company-settings/company-settings.component.html\n// module id = ../../../../../src/app/Admin/company-settings/company-settings.component.html\n// module chunks = admin.module","import { Component, OnInit,Output,EventEmitter,OnDestroy} from '@angular/core';\r\nimport { AdminService } from '../services/admin.service';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { FileRestrictions, SelectEvent, ClearEvent, RemoveEvent, FileInfo, SuccessEvent } from '@progress/kendo-angular-upload';\r\nimport { HeaderService } from '../../core/services/header.sevice';\r\nimport { ElementRef } from '@angular/core/src/linker/element_ref';\r\nimport { CkEditorConfig, CommonServices } from './../../common'\r\nimport { Subject } from 'rxjs';\r\nimport { strictEqual } from 'assert';\r\nimport { debug } from 'util';\r\n//import { FormControl } from '@angular/forms/src/model';\r\n//import { Validators } from '@angular/forms/src/validators';\r\n\r\n@Component({\r\n    selector: \"company-settings\",\r\n    templateUrl: \"company-settings.component.html\"\r\n})\r\n\r\nexport class CompanySettingsComponent implements OnInit{\r\n\r\n    profileImageUploadUrl = \"api/account/uploadimage?type=profileimage\"\r\n    backgroundImageForLoginUploadUrl = \"api/account/uploadimage?type=backgroundimage\";\r\n    headerLogoUploadUrl = \"api/account/uploadimage?type=headerlogo\";\r\n\r\n    public companyMessage: any;\r\n    formData: any;\r\n    subscription: any;\r\n    public tooltip: any;\r\n    public headerData: any;\r\n    editorConfig: any = CkEditorConfig;\r\n\r\n    ngOnInit(): void {\r\n        \r\n        let content = document.getElementsByClassName('updatename');\r\n        for (let i = 0; i < content.length; i++) {\r\n            content[i].querySelector('.updatename div span').innerHTML = \"UPLOAD OR REPLACE IMAGE\";\r\n        }\r\n        this.getCompanySettings();\r\n\r\n        //set the header data of the page.\r\n        this.setHeaderData();\r\n\r\n        //when form value update update the header data\r\n        this.formData.valueChanges.subscribe(res => {\r\n            this.setHeaderData();\r\n        });\r\n\r\n        this.subscription = this._headerService.headerChanges$.subscribe(action => {\r\n            if (action == 'update')\r\n                this.saveCompanySettings();\r\n\r\n        });\r\n        \r\n    }\r\n\r\n\r\n    constructor(private _adminService: AdminService, private fb: FormBuilder, private _headerService: HeaderService, private _commonService: CommonServices) {\r\n        this.formData = this.fb.group({\r\n            AppName: ['', Validators.compose([Validators.required])],\r\n            CompanyLogo: [null],\r\n            BackgroundImageUrlForLogin: [null],\r\n            PersonalAccessToken: ['', Validators.compose([Validators.required])],\r\n            SettingOne: ['', Validators.compose([Validators.required])],\r\n            SettingTwo: ['', Validators.compose([Validators.required])], \r\n            SMTPFromEmail: ['', Validators.compose([Validators.required])],\r\n            SMTPFromName: ['', Validators.compose([Validators.required])],\r\n            SMTPHostUrl: ['', Validators.compose([Validators.required])],\r\n            SMTPPort: ['', Validators.compose([Validators.required])],\r\n            EncryptionType: ['', Validators.compose([Validators.required])],\r\n            SMTPAuthentication: ['', Validators.compose([Validators.required])],\r\n            SMTPUserName: ['', Validators.compose([Validators.required])],\r\n            SMTPPassword: ['', Validators.compose([Validators.required])],\r\n            InvitationEmailSubject: ['', Validators.compose([Validators.required])],\r\n            InvitationEmailMessage: ['', Validators.compose([Validators.required])],\r\n            PasswordResetEmailSubject: ['', Validators.compose([Validators.required])],\r\n            PasswordResetEmailMessage: ['', Validators.compose([Validators.required])],\r\n            HeaderLogo : [null]\r\n        });\r\n    }\r\n\r\n    saveCompanySettings() {\r\n        this._adminService.setCompanySettings(this.formData.value)\r\n            .subscribe();\r\n\r\n        //if (this.formData.controls[\"AppName\"].touched && this.formData.controls[\"AppName\"].dirty)\r\n        this._commonService.setHeaderValues({\r\n            HeaderLogo: this.formData.controls[\"HeaderLogo\"].value,\r\n            HeaderAppName: this.formData.controls[\"AppName\"].value\r\n        });  \r\n    }\r\n\r\n    getCompanySettings() {\r\n        this._adminService.getCompanySettings()\r\n            .subscribe(res => {\r\n                if (res.Data) {\r\n                    this.formData.patchValue({ AppName: res.Data.AppName });\r\n                    this.formData.patchValue({ CompanyLogo: res.Data.CompanyLogo });\r\n                    this.formData.patchValue({ BackgroundImageUrlForLogin: res.Data.BackgroundImageUrlForLogin });\r\n                    this.formData.patchValue({ PersonalAccessToken: res.Data.PersonalAccessToken });\r\n                    this.formData.patchValue({ SettingOne: res.Data.SettingOne });\r\n                    this.formData.patchValue({ SettingTwo: res.Data.SettingTwo });\r\n                    this.formData.patchValue({ SMTPFromEmail: res.Data.SMTPFromEmail });\r\n                    this.formData.patchValue({ SMTPFromName: res.Data.SMTPFromName });\r\n                    this.formData.patchValue({ SMTPHostUrl: res.Data.SMTPHostUrl });\r\n                    this.formData.patchValue({ SMTPPort: res.Data.SMTPPort });\r\n                    this.formData.patchValue({ EncryptionType: res.Data.EncryptionType });\r\n                    this.formData.patchValue({ SMTPAuthentication: res.Data.SMTPAuthentication });\r\n                    this.formData.patchValue({ SMTPUserName: res.Data.SMTPUserName });\r\n                    this.formData.patchValue({ SMTPPassword: res.Data.SMTPPassword });\r\n                    this.formData.patchValue({ InvitationEmailSubject: res.Data.InvitationEmailSubject });\r\n                    this.formData.patchValue({ InvitationEmailMessage: res.Data.InvitationEmailMessage });\r\n                    this.formData.patchValue({ PasswordResetEmailSubject: res.Data.PasswordResetEmailSubject });\r\n                    this.formData.patchValue({ PasswordResetEmailMessage: res.Data.PasswordResetEmailMessage });\r\n                    this.formData.patchValue({ HeaderLogo: res.Data.HeaderLogo});\r\n                }\r\n            });\r\n    }\r\n\r\n    uploadLogoSuccessEventHandler(e: SuccessEvent) {\r\n        if (e.operation == \"upload\") {\r\n            this.formData.patchValue({ CompanyLogo: e.response.body.Data });\r\n        }\r\n    }\r\n\r\n    loginImageSuccessEventHandler(e: SuccessEvent) {\r\n        if (e.operation == \"upload\") {\r\n            this.formData.patchValue({ BackgroundImageUrlForLogin: e.response.body.Data });\r\n        }\r\n    }\r\n\r\n    uploadHeaderLogoSuccessEventHandler(e: SuccessEvent) {\r\n        debugger\r\n        if (e.operation == \"upload\") {\r\n            this.formData.patchValue({ HeaderLogo: e.response.body.Data });\r\n        }\r\n    }\r\n    setHeaderData() {\r\n\r\n        //create Header Data.\r\n        this.headerData = { Title: \"Company Settings\" }\r\n        this.headerData['buttons'] = [{ actionType: 'update', type: \"Update Settings\", disabled: this.formData.invalid, isIcon: false }];\r\n\r\n        //emit header data to the subheader component.\r\n        this._headerService.emitChildChanges(this.headerData);\r\n    }\r\n    ngOnDestroy() {\r\n        this._headerService.emitChildChanges('');\r\n        this.subscription.unsubscribe();\r\n       \r\n\r\n    }\r\n\r\n    toggleElement(element: HTMLDivElement) {\r\n        if (element) {\r\n            element.hidden = !element.hidden;\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/company-settings/company-settings.component.ts","module.exports = \"<div class=\\\"dashborad\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mb-4\\\">\\r\\n            <div class=\\\"projects-list-container\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <select class=\\\"custom-select custom-select-secondary\\\" id=\\\"inlineFormCustomSelect\\\" (change)=\\\"onSelected($event.target.value)\\\" >\\r\\n                        <!--<option value=\\\"-1\\\">{{'AdminModule.SelectYourProject' | translate}}</option>-->\\r\\n                        <option *ngFor=\\\"let project of projectList\\\" value={{project.Id}} >{{project.Name}}</option>\\r\\n                    </select>\\r\\n                    <small class=\\\"text-muted\\\">{{'AdminModule.Label.ProjectsList' | translate}}</small>\\r\\n                    <small class=\\\"text-muted\\\" *ngIf=\\\"projectList?.length==0\\\">{{'AdminModule.Label.NoProjects' | translate}}</small>\\r\\n                </div>\\r\\n            </div>\\r\\n            <p>{{projectSummary}}</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"card has-shadow mb-4\\\">\\r\\n                <h5 class=\\\"card-header\\\">TODAY'S STATUS</h5>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12 chart\\\" *ngIf=\\\"barChartData?.length\\\">\\r\\n                            <canvas baseChart #baseChart1=\\\"base-chart\\\"\\r\\n                                    [datasets]=\\\"barChartData\\\"\\r\\n                                    [labels]=\\\"barChartLabels\\\"\\r\\n                                    [options]=\\\"barChartOptions\\\"\\r\\n                                    [legend]=\\\"barChartLegend\\\"\\r\\n                                    [chartType]=\\\"barChartType\\\"\\r\\n                                    (chartHover)=\\\"chartHovered($event)\\\"\\r\\n                                    [colors]=\\\"barChartColors\\\"\\r\\n                                    (chartClick)=\\\"chartClicked($event)\\\" ></canvas>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"card has-shadow mb-4\\\">\\r\\n                <h5 class=\\\"card-header\\\">TOTAL OPEN: STATUS</h5>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row\\\" *ngIf=\\\"lineChartData1?.length\\\">\\r\\n                        <canvas baseChart #baseChart2=\\\"base-chart\\\"\\r\\n                                [datasets]=\\\"lineChartData1\\\"\\r\\n                                [labels]=\\\"lineChartLabels\\\"\\r\\n                                [options]=\\\"lineChartOptions\\\"\\r\\n                                [colors]=\\\"lineChartColors\\\"\\r\\n                                [legend]=\\\"lineChartLegend\\\"\\r\\n                                [chartType]=\\\"lineChartType\\\"\\r\\n                                (chartHover)=\\\"chartHovered($event)\\\"\\r\\n                                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"card has-shadow mb-4\\\">\\r\\n                <h5 class=\\\"card-header\\\">TOTAL OPEN: TYPE</h5>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row\\\" *ngIf=\\\"lineChartData2?.length\\\">\\r\\n                        <canvas baseChart #baseChart3=\\\"base-chart\\\"\\r\\n                                [datasets]=\\\"lineChartData2\\\"\\r\\n                                [labels]=\\\"lineChartLabels\\\"\\r\\n                                [options]=\\\"lineChartOptions\\\"\\r\\n                                [colors]=\\\"lineChartColors\\\"\\r\\n                                [legend]=\\\"lineChartLegend\\\"\\r\\n                                [chartType]=\\\"lineChartType\\\"\\r\\n                                (chartHover)=\\\"chartHovered($event)\\\"\\r\\n                                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/Admin/dashboard/dashboard.component.html\n// module chunks = admin.module","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { AdminService } from './../services/admin.service';\r\nimport 'rxjs'\r\nimport { BaseChartDirective } from 'ng2-charts/ng2-charts';\r\nimport { HeaderService } from '../../core/services/header.sevice';\r\n\r\n@Component({\r\n    selector: 'dashboard',\r\n    templateUrl: 'dashboard.component.html'\r\n})\r\n\r\nexport class DashboardComponent implements OnInit, OnDestroy {\r\n    @ViewChild(\"baseChart1\") chart1: BaseChartDirective;\r\n    @ViewChild(\"baseChart2\") chart2: BaseChartDirective;\r\n    @ViewChild(\"baseChart3\") chart3: BaseChartDirective;\r\n    public headerData: any;\r\n    public projectSummary: string;\r\n    public subscription: any;\r\n    public barChartData: Array<any>;\r\n    public lineChartData1: Array<any>;\r\n    public lineChartData2: Array<any>;\r\n    public projectList: any\r\n    public lineChartLegend: boolean = true;\r\n    public lineChartType: string = 'line';\r\n    public barChartLabels: string[] = [''];\r\n    public barChartType: string = 'bar';\r\n    public barChartLegend: boolean = true;\r\n    public lineChartLabels: Array<any> = ['3 Weeks Ago', '2 Weeks Ago', 'Last Week', 'Today'];\r\n    public lineChartOptions: any = { responsive: true };\r\n    public barChartOptions: any = {\r\n        scaleShowVerticalLines: true,\r\n        responsive: true,\r\n        plugins: {\r\n            datalabels: {\r\n                display: true,\r\n                align: 'center',\r\n                anchor: 'center'\r\n            }\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n                stacked: true,\r\n                stackLabels: {\r\n                    enabled: true\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                stacked: true,\r\n                ticks: {\r\n                    beginAtZero: true\r\n                }\r\n            }]\r\n        }\r\n    };\r\n    public barChartColors: Array<any> = [\r\n        {\r\n            backgroundColor: '#02B8D3',\r\n        },\r\n        {\r\n            backgroundColor: '#028497',\r\n        },\r\n        {\r\n            backgroundColor: '#04536E',\r\n        },\r\n        {\r\n            backgroundColor: '#15a1b6',\r\n        },\r\n        {\r\n            backgroundColor: '#00CED1',\r\n        },\r\n        {\r\n            backgroundColor: '#20B2AA'\r\n        },\r\n        {\r\n            backgroundColor: '#5F9EA0'\r\n        },\r\n        {\r\n            backgroundColor: '#008B8B'\r\n        }\r\n    ];\r\n    public lineChartColors: Array<any> = [\r\n        {\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#02B8D3',\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: '#02B8D3',\r\n\r\n        },\r\n        {\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#028497',\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: '#028497',\r\n        },\r\n        {\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#04536E',\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: '#04536E',\r\n        },\r\n        {\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#15a1b6',\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: '#15a1b6',\r\n        }, {\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#00CED1',\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: '#00CED1',\r\n        }, {\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#20B2AA',\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: '#20B2AA',\r\n        }, {\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#5F9EA0',\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: '#5F9EA0',\r\n        }, {\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#008B8B',\r\n            pointBackgroundColor: 'transparent',\r\n            pointBorderColor: '#008B8B',\r\n        }\r\n\r\n    ];\r\n\r\n    constructor(public adminService: AdminService, private _headerService: HeaderService) {\r\n\r\n        //initialize charts by raw data.\r\n        this.barChartData = [\r\n            { data: [0, 0, 0], label: '' },\r\n            \r\n        ];\r\n\r\n        this.lineChartData1 = [\r\n            { data: [0, 0, 0, 0], label: '' },\r\n           \r\n        ];\r\n\r\n        this.lineChartData2 = [\r\n            { data: [0, 0, 0, 0], label: '' },\r\n         \r\n        ];\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        //set header Data\r\n        this.setHeaderData();\r\n\r\n        //add subscription when sub-header button click.\r\n        this.subscription = this._headerService.headerChanges$.subscribe(action => {\r\n            if (action == 'syncproject')\r\n                this.syncProject();\r\n        });\r\n        //perform action when the header fire and event.\r\n        this.adminService.getProjectList().subscribe(res => {\r\n            if (res && res.Data.length > 0)\r\n            this.projectList = res.Data;\r\n            this.setChartData(this.projectList[0].Id);\r\n        });\r\n\r\n    }\r\n\r\n    onSelected(projectId: any) {      \r\n        this.setChartData(projectId);\r\n    }\r\n\r\n    syncProject() {\r\n        this.adminService.SyncProject().subscribe(res => { })\r\n    }\r\n\r\n    setChartData(projectId: any) {\r\n\r\n        this.adminService.getChartData(projectId).subscribe(res => {\r\n            if (res.Data) {\r\n                this.chart1.chart.destroy();\r\n                this.chart1.chart = 0;\r\n                this.chart1.datasets = res.Data.BarChartModel;\r\n                this.chart1.labels = res.Data.BarChartLabels;\r\n                this.chart1.ngOnInit();\r\n\r\n                this.chart2.chart.destroy();\r\n                this.chart2.chart = 0;\r\n                this.chart2.datasets = res.Data.FistLineChartModel;\r\n                this.chart2.labels = this.lineChartLabels;\r\n                this.chart2.ngOnInit();\r\n\r\n                this.chart3.chart.destroy();\r\n                this.chart3.chart = 0;\r\n                this.chart3.datasets = res.Data.SecondLineChartModel;\r\n                this.chart3.labels = this.lineChartLabels;\r\n                this.chart3.ngOnInit();\r\n\r\n                this.projectSummary = res.Data.Description;\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    // events\r\n    public chartClicked(e: any): void {\r\n    }\r\n\r\n    public chartHovered(e: any): void {\r\n\r\n    }\r\n\r\n    setHeaderData() {\r\n\r\n        //create Header Data.\r\n        this.headerData = { Title: \"DASHBOARD\" }\r\n        this.headerData['buttons'] = [{ actionType: 'syncproject', type: \"SYNC DASHBOARD\", disabled: false, isIcon: true, iconText: 'sync' }];\r\n\r\n        //emit header data to the subheader component.\r\n        this._headerService.emitChildChanges(this.headerData);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n        this._headerService.emitChildChanges('');\r\n    }\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/dashboard/dashboard.component.ts","export { DashboardComponent } from './dashboard/dashboard.component'\r\nexport { ProjectSettingsComponent } from './project-settings/project-settings.component'\r\nexport { AdminService } from './services/admin.service'\r\nexport { InviteUserComponent } from './invite-user/invite-user.component'\r\nexport { UserListComponent } from './user-list/user-list.component'\r\nexport { UserDetailsComponent } from './user-details/user-details.component'\r\nexport { CompanySettingsComponent } from './company-settings/company-settings.component'\r\nexport { WorkItemListComponent } from './workitemlist/workitem-list.component';\r\nexport { WorkItemChildListComponent } from './workitemlist/workitem-listchild.component';\r\nexport { WorkItemComponent } from './work-item/addwork-item.component';\r\nexport { AdminListComponent } from './admin-list/admin-list.component';\r\nexport { AboutNeelaComponent } from './about-neela/about-neela.component';\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/index.ts","module.exports = \"<div class=\\\"card has-shadow invite-user\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <!-- Nav tabs -->\\r\\n        <ul class=\\\"nav tab-nav\\\">\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#clientUsers\\\">CLIENT USERS </a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#adminstrators\\\">ADMINISTRATORS</a>\\r\\n            </li>\\r\\n\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"tab-content tab-content-custom\\\">\\r\\n            <div class=\\\"tab-pane active\\\" id=\\\"clientUsers\\\">\\r\\n                <form [formGroup]=\\\"formData\\\">\\r\\n                    <div class=\\\"action mb-3 d-flex justify-content-between w-100\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"/admin/userlist\\\"> <i class=\\\"material-icons\\\">arrow_back_ios</i> Return To USERS</button>\\r\\n                        <button type=\\\"button\\\" [disabled]=\\\"formData.invalid\\\" class=\\\"btn btn-primary\\\" (click)=\\\"sendInvite()\\\"><i class=\\\"material-icons\\\">add</i> {{'CoreModule.Button.Invite' | translate}}</button>\\r\\n\\r\\n                    </div>\\r\\n                    <h5 class=\\\"card-sub-title\\\">{{'CoreModule.Label.InviteUser' | translate}}</h5>\\r\\n\\r\\n                    <div class=\\\"\\\">\\r\\n                        <div class=\\\"row align-items-start\\\">\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group mb-3\\\">\\r\\n                                    <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid':formData.get('FirstName').touched && formData.get('FirstName').invalid }\\\" type=\\\"text\\\" placeholder=\\\"{{'CoreModule.Placeholder.FirstName' | translate}}\\\" name=\\\"First Name\\\" formControlName=\\\"FirstName\\\" />\\r\\n                                    <small class=\\\"text-muted\\\">First Name</small>\\r\\n                                    <div class=\\\"form-text text-danger w-100\\\" *ngIf=\\\"formData.get('FirstName').touched && formData.get('FirstName').hasError('required')\\\">First Name {{'CoreModule.Validations.Required' | translate}}</div>\\r\\n                                    <div class=\\\"form-text text-danger w-100\\\" *ngIf=\\\"formData.get('FirstName').touched && !formData.get('FirstName').hasError('required') && formData.get('FirstName').hasError('blankValidation')\\\">{{'CoreModule.Validations.BlankValidation' | translate}}</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group mb-3\\\">\\r\\n                                    <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid':formData.get('LastName').touched && formData.get('LastName').invalid }\\\" type=\\\"text\\\" placeholder=\\\"{{'CoreModule.Placeholder.LastName' | translate}}\\\" name=\\\"LastName\\\" formControlName=\\\"LastName\\\" />\\r\\n                                    <!--<div class=\\\"form-text text-danger w-100\\\" *ngIf=\\\"formData.get('LastName').touched && formData.get('LastName').hasError('required')\\\">Last Name {{'CoreModule.Validations.Required' | translate}}</div>-->\\r\\n                                    <small class=\\\"text-muted\\\">\\r\\n                                        Last Name\\r\\n                                    </small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-4\\\">\\r\\n                                <div class=\\\"form-group mb-3\\\">\\r\\n                                    <input class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid':formData.get('Email').touched && formData.get('Email').invalid }\\\" type=\\\"text\\\" placeholder=\\\"{{'CoreModule.Placeholder.Email' | translate}}\\\" formControlName=\\\"Email\\\" />\\r\\n                                    <small class=\\\"text-muted\\\">Email</small>\\r\\n                                    <div class=\\\"form-text text-danger w-100\\\" *ngIf=\\\"formData.get('Email').touched && formData.get('Email').hasError('required')\\\">Email {{'CoreModule.Validations.Required' | translate}}</div>\\r\\n                                    <div class=\\\"form-text text-danger w-100\\\" *ngIf=\\\"formData.get('Email').touched && !formData.get('Email').hasError('required') && formData.get('Email').hasError('emailFormat')\\\">{{'CoreModule.Validations.EmailFormat' | translate}}</div>\\r\\n                                    <div class=\\\"form-text text-danger w-100\\\" *ngIf=\\\"formData.get('Email').hasError('isemailexist')\\\">{{'CoreModule.Validations.EmailExist' | translate}}</div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div formArrayName=\\\"Projects\\\" class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-4 col-md-6\\\" *ngFor=\\\"let project of ProjectList.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\r\\n                            <div class=\\\"form-check form-check-custom pl-0\\\">\\r\\n                                <label>\\r\\n                                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" formControlName=\\\"IsSelected\\\">{{formData.controls['Projects'].controls[i].value.Name | translate}}\\r\\n                                    <span class=\\\"squire-check-mark\\\"></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"form-text text-danger\\\" *ngIf=\\\"formData.get('Projects').hasError('multipleCheckboxRequireOne')\\\">* {{'CoreModule.Validations.Select' | translate}}</div>\\r\\n\\r\\n\\r\\n                </form>\\r\\n            </div>\\r\\n            <div class=\\\"tab-pane fade\\\" id=\\\"adminstrators\\\">\\r\\n\\r\\n              <admin-list></admin-list>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/invite-user/invite-user.component.html\n// module id = ../../../../../src/app/Admin/invite-user/invite-user.component.html\n// module chunks = admin.module","import { Component, OnInit } from '@angular/core'\r\nimport { AdminService } from '../services/admin.service';\r\nimport { FormBuilder, Validators, FormArray } from '@angular/forms'\r\nimport { Router } from '@angular/router';\r\nimport 'rxjs/add/operator/debounceTime';\r\n\r\nimport { Validations } from './../../common'\r\n\r\n\r\n@Component({\r\n    selector: 'invite-user',\r\n    templateUrl: 'invite-user.component.html'\r\n})\r\n\r\nexport class InviteUserComponent implements OnInit {\r\n    formData: any;\r\n    projectList: any;\r\n    isSendInviteDisable: any = true;\r\n    isInviteSend: any = false;\r\n    isUserExist: any = false;\r\n\r\n\r\n\r\n    constructor(private adminService: AdminService, private fb: FormBuilder, private customValidation: Validations, private router: Router) {\r\n        this.formData = this.fb.group({\r\n            FirstName: ['', Validators.compose([Validators.required, customValidation.validateNoBlankValues])],\r\n            LastName: [''],\r\n            Email: ['',  Validators.compose([Validators.required , customValidation.validateEmail]) , customValidation.checkUserEmail(this.adminService) ],\r\n            Projects: this.fb.array([\r\n            ],\r\n                customValidation.multipleCheckboxRequireOne\r\n            )\r\n        })\r\n\r\n    }\r\n\r\n    get ProjectList(): FormArray { return this.formData.get('Projects') as FormArray; }\r\n\r\n    initProject() {\r\n        return this.fb.group({\r\n            Id: [0],\r\n            Name: [''],\r\n            IsSelected: [false]\r\n        })\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.adminService.getProjectList().subscribe(res => {\r\n            if (res) {\r\n                this.projectList = res.Data;\r\n                let projectCount = res.Data.length;\r\n                let projectControl = <FormArray>this.formData.controls[\"Projects\"];\r\n                for (let i = 0; i < projectCount; i++) {\r\n                    projectControl.push(this.initProject())\r\n                }\r\n                this.formData.patchValue({ Projects: res.Data })\r\n            }\r\n        });\r\n\r\n    }\r\n    sendInvite() {      \r\n        if (this.formData.valid) {\r\n            this.formData.value.FirstName = this.formData.value.FirstName.trim();\r\n            this.formData.value.LastName = this.formData.value.LastName.trim();\r\n            this.formData.value.Email = this.formData.value.Email.trim();\r\n            this.adminService.sendInvite(this.formData.value).subscribe(res => {\r\n                this.isInviteSend = res;\r\n                if (res) {\r\n                    this.router.navigate(['/admin/userlist']);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/invite-user/invite-user.component.ts","module.exports = \"<div class=\\\"projects-list-container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <select class=\\\"custom-select custom-select-secondary\\\" id=\\\"inlineFormCustomSelect\\\" (change)=\\\"onSelect($event.target.value)\\\">\\r\\n                    <option value=\\\"-1\\\">{{'AdminModule.SelectProject' | translate}}</option>\\r\\n                    <option *ngFor=\\\"let project of projectList\\\" value={{project.Id}}>{{project.Name}}</option>\\r\\n                </select>\\r\\n                <small class=\\\"text-muted\\\">{{'AdminModule.Label.ProjectsList' | translate}}</small>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<form [formGroup]=\\\"adminSettingForm\\\" *ngIf=\\\"isDisplaySettings\\\" (submit)=\\\"saveProjectSetting()\\\">\\r\\n    <div class=\\\"card mb-4 has-shadow\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div formArrayName=\\\"WorkItemsList\\\" class=\\\"show-work-item mb-4\\\">\\r\\n                        <h5 class=\\\"card-title\\\">{{'AdminModule.Label.ItemsToShow' | translate}}</h5>\\r\\n                        <div *ngFor=\\\"let workItem of WorkItemList.controls; let i=index\\\" [formGroupName]=\\\"i\\\" class=\\\"form-check form-check-custom pl-0\\\">\\r\\n                            <label>\\r\\n\\r\\n                                <input formControlName=\\\"IsSelected\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                {{workItem.value.Name | translate}}\\r\\n                                <span class=\\\"squire-check-mark\\\"></span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"vsts-Fields mb-4\\\">\\r\\n                        <h5 class=\\\"card-title\\\">{{'AdminModule.Label.FieldUpdate' | translate}}</h5>\\r\\n                        <div formGroupName=\\\"EditableFields\\\">\\r\\n                            <div class=\\\"form-check form-check-custom pl-0\\\">\\r\\n                                <label>\\r\\n                                    {{'AdminModule.Label.Title' | translate}}\\r\\n                                    <input formControlName=\\\"Title\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                    <span class=\\\"squire-check-mark\\\"></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-check form-check-custom pl-0\\\">\\r\\n                                <label>\\r\\n                                    {{'AdminModule.Label.Details' | translate}}\\r\\n                                    <input formControlName=\\\"Details\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                    <span class=\\\"squire-check-mark\\\"></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-check form-check-custom pl-0\\\">\\r\\n                                <label>\\r\\n                                    {{'AdminModule.Label.CustomerFeedback' | translate}}\\r\\n                                    <input formControlName=\\\"CustomerFeedback\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                    <span class=\\\"squire-check-mark\\\"></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    \\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"custom-filter mb-4\\\">\\r\\n                        <h5 class=\\\"card-title\\\">{{'AdminModule.Label.CustomFilters' | translate}}</h5>\\r\\n                        <div class=\\\"form-check form-check-custom pl-0\\\">\\r\\n                            <label>\\r\\n                                {{'AdminModule.Label.ShowVSTDesk' | translate}}\\r\\n                                <input formControlName=\\\"VSTDeskActive\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                <span class=\\\"squire-check-mark\\\"></span>\\r\\n                            </label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"work-item mb-4\\\">\\r\\n                        <h5 class=\\\"card-title\\\">{{'AdminModule.Label.Layout' | translate}}</h5>\\r\\n                        <div formGroupName=\\\"Layout\\\">\\r\\n                            <div class=\\\"form-check radio-checkbox-custom\\\">\\r\\n                                <label>\\r\\n                                    {{'AdminModule.Label.Hierarchical' | translate}}\\r\\n                                    <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" (click)=\\\"setradio(0)\\\" id=\\\"optionsRadios1\\\" [checked]=\\\"adminSettingForm?.controls['Layout'].controls['Hierarchical']?.value\\\">\\r\\n                                    <span class=\\\"circle-check-mark\\\"></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-check radio-checkbox-custom\\\">\\r\\n                                <label>\\r\\n                                    {{'AdminModule.Label.Flat' | translate}}\\r\\n                                    <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" (click)=\\\"setradio(1)\\\" id=\\\"optionsRadios2\\\" [checked]=\\\"adminSettingForm?.controls['Layout'].controls['Flat']?.value\\\">\\r\\n                                    <span class=\\\"circle-check-mark\\\"></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"work-item mb-4\\\">\\r\\n                        <h5 class=\\\"card-title\\\">{{'AdminModule.Label.GridVisibleFields' | translate}}</h5>\\r\\n                        <div formGroupName=\\\"GridVisibleFields\\\">\\r\\n                            <div class=\\\"form-check form-check-custom pl-0\\\">\\r\\n                                <label>\\r\\n                                    {{'AdminModule.Label.WorkItemId' | translate}}\\r\\n                                    <input formControlName=\\\"WorkItemId\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                    <span class=\\\"squire-check-mark\\\"></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-check form-check-custom pl-0\\\">\\r\\n                                <label>\\r\\n                                    {{'AdminModule.Label.WorkItemType' | translate}}\\r\\n                                    <input formControlName=\\\"WorkItemType\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                    <span class=\\\"squire-check-mark\\\"></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-check form-check-custom pl-0\\\">\\r\\n                                <label>\\r\\n                                    {{'AdminModule.Label.Title' | translate}}\\r\\n                                    <input formControlName=\\\"Title\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                    <span class=\\\"squire-check-mark\\\"></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-check form-check-custom pl-0\\\">\\r\\n                                <label>\\r\\n                                    {{'AdminModule.Label.State' | translate}}\\r\\n                                    <input formControlName=\\\"State\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                    <span class=\\\"squire-check-mark\\\"></span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!--<div class=\\\"status mb-4\\\">\\r\\n        <h5 class=\\\"card-title\\\">{{'AdminModule.Label.Status' | translate}}</h5>\\r\\n        <div formArrayName=\\\"WorkItemsState\\\">\\r\\n\\r\\n            <div *ngFor=\\\"let workItemState of WorkItemStateList.controls; let i=index\\\" [formGroupName]=\\\"i\\\" class=\\\"form-check form-check-custom pl-0\\\">\\r\\n                <label>\\r\\n                    {{ workItemState.value.Name  | translate}}\\r\\n                    <input formControlName=\\\"IsSelected\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                    <span class=\\\"squire-check-mark\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>-->\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"new-task mb-4\\\">\\r\\n                <h5 class=\\\"card-title\\\">{{'AdminModule.Label.DefaultValues' | translate}}</h5>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label>{{'AdminModule.Label.State' | translate}}</label>\\r\\n                        <select class=\\\"custom-select custom-select-secondary\\\" formControlName=\\\"CreatedItemStatus\\\">\\r\\n                            <option value=\\\"\\\"> -- {{'AdminModule.Select' | translate}} {{'AdminModule.State' | translate}} --</option>\\r\\n                            <option *ngFor=\\\"let itemstatus of createdItemsStatus\\\" [value]=\\\"itemstatus.Name\\\">{{ itemstatus.Name}}</option>\\r\\n                        </select>\\r\\n                        <div class=\\\"form-text text-danger\\\" *ngIf=\\\"adminSettingForm.get('CreatedItemStatus').hasError('option')\\\">\\r\\n                            {{'AdminModule.Validations.SelectState' | translate}}\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label>{{'AdminModule.Label.WorkItemType' | translate}}</label>\\r\\n                        <select class=\\\"custom-select custom-select-secondary\\\" formControlName=\\\"CreatedItemType\\\">\\r\\n                            <option value=\\\"\\\"> -- {{'AdminModule.Select' | translate}} {{'AdminModule.WorkItemType' | translate}} --</option>\\r\\n                            <option *ngFor=\\\"let workItem of WorkItemList.controls\\\" [value]=\\\"workItem.value.Name\\\"> {{workItem.value.Name | translate}}</option>\\r\\n                        </select>\\r\\n                        <div class=\\\"form-text text-danger\\\" *ngIf=\\\"adminSettingForm.get('CreatedItemType').hasError('option')\\\">\\r\\n                            {{'AdminModule.Validations.SelectCreatedWorkItemType' | translate}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-4\\\">\\r\\n                        <label>{{'AdminModule.Label.AssignedTo' | translate}}</label>\\r\\n                        <select class=\\\"custom-select custom-select-secondary\\\" formControlName=\\\"DefaultAssignment\\\">\\r\\n                            <option value=\\\"\\\"> -- {{'AdminModule.Select' | translate}} {{'AdminModule.Assignment' | translate}} --</option>\\r\\n                            <option *ngFor=\\\"let member of MemberList\\\" [value]=\\\"member\\\"> {{member | translate}}</option>\\r\\n                        </select>\\r\\n                        <div class=\\\"form-text text-danger\\\" *ngIf=\\\"adminSettingForm.get('DefaultAssignment').hasError('option')\\\">\\r\\n                            {{'AdminModule.Validations.SelectAssignment' | translate}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            <div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6\\\"><h5 class=\\\"card-title\\\">{{'AdminModule.Label.CustomStatus' | translate}}</h5></div>\\r\\n                    <div class=\\\"col-md-6\\\"><h5 class=\\\"card-title\\\">{{'AdminModule.Label.VSTDeskCustomStatus' | translate}}</h5></div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-1\\\">\\r\\n                                <div formArrayName=\\\"WorkItemsState\\\">\\r\\n                                    <div *ngFor=\\\"let workItemState of WorkItemStateList.controls; let i=index\\\" [formGroupName]=\\\"i\\\" class=\\\"form-group form-control form-check form-check-custom pl-0\\\" style=\\\"border:0px;background-color:transparent\\\">\\r\\n                                        <label>\\r\\n                                            <input formControlName=\\\"IsSelected\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                                            <span class=\\\"squire-check-mark\\\" style=\\\"top:7px;left:1px\\\"></span>\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-md-11\\\">\\r\\n                                <div class=\\\"custom-status\\\" formArrayName=\\\"CustomStatus\\\">\\r\\n                                    <div [formGroupName]=\\\"i\\\" *ngFor=\\\"let customStatus of adminSettingForm.controls['CustomStatus'].controls; let i=index\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"StatusName\\\" disabled />\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"custom-status\\\" formArrayName=\\\"CustomStatus\\\">\\r\\n                            <div [formGroupName]=\\\"i\\\" *ngFor=\\\"let customStatus of adminSettingForm.controls['CustomStatus'].controls; let i=index\\\">\\r\\n                                <!--<div class=\\\"col-md-6\\\">\\r\\n\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"StatusName\\\" disabled />\\r\\n                                    </div>\\r\\n                                </div>-->\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <input formControlName=\\\"DisplayName\\\" class=\\\"form-control white-bg\\\" type=\\\"text\\\" id=\\\"example-text-input\\\">\\r\\n                                </div>\\r\\n                                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"adminSettingForm.controls.CustomStatus.controls[i].get('DisplayName').touched && adminSettingForm.controls.CustomStatus.controls[i].get('DisplayName').hasError('required')\\\">\\r\\n                                    {{'AdminModule.Validations.Required' | translate}}\\r\\n                                </div>\\r\\n                                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"!adminSettingForm.controls.CustomStatus.controls[i].get('DisplayName').hasError('required') && adminSettingForm.controls.CustomStatus.controls[i].get('DisplayName').hasError('textFormat')\\\">{{'AdminModule.Validations.OnlyCharcters' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/project-settings/project-settings.component.html\n// module id = ../../../../../src/app/Admin/project-settings/project-settings.component.html\n// module chunks = admin.module","import { Component, OnInit } from '@angular/core'\r\nimport { AdminService } from '../services/admin.service';\r\nimport { FormBuilder, FormControl, FormGroup, FormArray, Validators } from '@angular/forms';\r\nimport { Validations } from '../../common'\r\nimport { HeaderService } from '../../core/services/header.sevice';\r\n\r\n@Component({\r\n    selector: 'project-settings',\r\n    templateUrl: 'project-settings.component.html'\r\n})\r\n\r\nexport class ProjectSettingsComponent implements OnInit {\r\n    public headerData: any;\r\n    public isShow: boolean = false;\r\n    workItemList: any;\r\n    MemberList: any;\r\n    public projectList: any;\r\n    public isDisplaySettings: any = false;\r\n    public data: any;\r\n    public adminSettingForm: any;\r\n    public createdItemsStatus: any = [];\r\n    public subscription: any;\r\n    constructor(private adminService: AdminService, public fb: FormBuilder, private customValidation: Validations, private _headerService:HeaderService) {\r\n\r\n    this.createForm();\r\n       \r\n    }\r\n\r\n    createForm(){\r\n         this.adminSettingForm = this.fb.group({\r\n            Id: [0],\r\n            ProjectId: [0],\r\n            VSTDeskActive: [true],\r\n            CreatedItemStatus: ['', Validators.compose([Validators.required, this.customValidation.selectOption]) ],\r\n            CreatedItemType: ['', Validators.compose([Validators.required, this.customValidation.selectOption]) ],\r\n            DefaultAssignment: ['', Validators.compose([Validators.required, this.customValidation.selectOption])],\r\n            EditableFields: this.fb.group({\r\n                Title: [false],\r\n                Details: [false],\r\n                CustomerFeedback: [false]\r\n            }),\r\n            WorkItemsList: this.fb.array([]),\r\n            Layout: this.fb.group({\r\n                Flat: [true],\r\n                Hierarchical: [false]\r\n            }),\r\n            GridVisibleFields: this.fb.group({\r\n                WorkItemId : [false],\r\n                WorkItemType: [false],\r\n                Title: [false],\r\n                State:[false]\r\n            }),\r\n            WorkItemsState: this.fb.array([]),\r\n            CustomStatus: this.fb.array([\r\n                this.initCustomStatusData()\r\n            ]),\r\n            MemberList:['']\r\n\r\n\r\n\r\n\r\n        });\r\n    }\r\n\r\n    initCustomStatusData() {\r\n\r\n        return this.fb.group({\r\n            Id: [0],\r\n            projectId: [0],\r\n            StatusName: [''],\r\n            DisplayName: ['', Validators.compose([Validators.required, this.customValidation.validateCharactersOnly])]\r\n\r\n        });\r\n    }\r\n    ngOnInit(): void {\r\n        //getting the list of project from the api\r\n        this.adminService.getProjectList().subscribe(res => {if (res)  this.projectList = res.Data;});\r\n\r\n        //set header data.\r\n        this.setHeaderData();\r\n\r\n        //add subscription when sub-header button click. \r\n        this.subscription = this._headerService.headerChanges$.subscribe(action => {\r\n            if (action == 'update' && this.adminSettingForm.invalid == false)\r\n                this.saveProjectSetting();\r\n        });\r\n\r\n    }\r\n\r\n    get WorkItemList(): FormArray { return this.adminSettingForm.get('WorkItemsList') as FormArray; }\r\n    get WorkItemStateList(): FormArray { return this.adminSettingForm.get('WorkItemsState') as FormArray; }\r\n\r\n\r\n    initWorkItems() {\r\n        return this.fb.group({\r\n            Id: [0],\r\n            Name: [''],\r\n            IsSelected: [false]\r\n        })\r\n    }\r\n\r\n\r\n\r\n    //display panel on project selection\r\n    onSelect(data: any) {\r\n        let headerData;\r\n        if (data != -1) {\r\n            this.isShow = true;\r\n            this.getAdminSettings(data);\r\n            this.isDisplaySettings = true;\r\n        }\r\n        else if (data == -1) {\r\n            this.isDisplaySettings = this.isShow=false;\r\n        }\r\n    }\r\n\r\n    getAdminSettings(projectId: any) {\r\n        this.createForm();\r\n        this.adminSettingForm.valueChanges.subscribe((res: any) => {  this.setHeaderData() });\r\n        this.adminService.getAdminSettings(projectId).subscribe(res => {\r\n            if (res) {\r\n                \r\n                this.createdItemsStatus =  res.Data.WorkItemsState;\r\n                let workItemsControls = <FormArray>this.adminSettingForm.controls[\"WorkItemsList\"];\r\n                let lengthofCustomItem = res.Data.WorkItemsList.length;\r\n                while (lengthofCustomItem--) {\r\n                    workItemsControls.push(this.initWorkItems())\r\n                }\r\n                this.adminSettingForm.patchValue({ WorkItemsList: res.Data.WorkItemsList })\r\n\r\n                let lengthofCustomItemState = res.Data.WorkItemsState.length;\r\n                let workItemsStateControls = <FormArray>this.adminSettingForm.controls[\"WorkItemsState\"];\r\n                while (lengthofCustomItemState--) {\r\n                    workItemsStateControls.push(this.initWorkItems())\r\n                }\r\n                this.adminSettingForm.patchValue({ WorkItemsState: res.Data.WorkItemsState })\r\n\r\n                let dataLength = res.Data.CustomStatus.length;\r\n                let formControl = <FormArray>this.adminSettingForm.controls[\"CustomStatus\"];\r\n\r\n                while (--dataLength) {\r\n                    formControl.push(this.initCustomStatusData());\r\n                }\r\n                \r\n                this.adminSettingForm.patchValue({ CustomStatus: res.Data.CustomStatus })\r\n                \r\n                this.adminSettingForm.patchValue({DefaultAssignment : res.Data.DefaultAssignment });\r\n                this.adminSettingForm.patchValue({EditableFields : res.Data.EditableFields});\r\n                this.adminSettingForm.patchValue({VSTDeskActive : res.Data.VSTDeskActive})\r\n                this.adminSettingForm.patchValue({ Layout: res.Data.Layout });\r\n                this.adminSettingForm.patchValue({ Id: res.Data.Id });\r\n                this.adminSettingForm.patchValue({ ProjectId: res.Data.ProjectId });\r\n                this.adminSettingForm.patchValue({ CreatedItemStatus: res.Data.CreatedItemStatus });\r\n                this.adminSettingForm.patchValue({ CreatedItemType: res.Data.CreatedItemType });\r\n                this.adminSettingForm.patchValue({ GridVisibleFields: res.Data.GridVisibleFields });\r\n                this.adminSettingForm.patchValue({ MemberList: res.Data.MemberList });\r\n                this.MemberList = res.Data.MemberList;\r\n                if (this.adminSettingForm.controls[\"DefaultAssignment\"].value == null) {\r\n                    this.adminSettingForm.patchValue({ DefaultAssignment: \"\" });\r\n                }\r\n                \r\n                this.setHeaderData();\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    //saving all the updated project settings to database\r\n    saveProjectSetting() {\r\n        this.adminService.setProjectSetting(this.adminSettingForm.value).subscribe(res => {})\r\n    }\r\n\r\n    setradio(data: any) {\r\n        if (data == 0) \r\n            this.adminSettingForm.controls['Layout'].patchValue({ Flat: false, Hierarchical: true });\r\n        else \r\n            this.adminSettingForm.controls['Layout'].patchValue({ Flat: true, Hierarchical: false });\r\n    }\r\n\r\n    setHeaderData() {\r\n\r\n        //create Header Data.\r\n        this.headerData = { Title: \"PROJECT SETTINGS\" }\r\n        if (this.isShow)\r\n            this.headerData['buttons'] = [{ actionType: 'update', type: \"UPDATE SETTINGS\", disabled: this.adminSettingForm.invalid, isIcon: false }];\r\n        else\r\n            this.headerData['buttons'] = undefined;\r\n\r\n        //emit header data to the subheader component.\r\n        this._headerService.emitChildChanges(this.headerData);   \r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n        this._headerService.emitChildChanges('');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/project-settings/project-settings.component.ts","module.exports = \"<div class=\\\"card has-shadow\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <!-- Nav tabs -->\\r\\n            <ul class=\\\"nav tab-nav\\\">\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#clientUsers\\\" (click)=\\\"toggle('client')\\\">CLIENT USERS </a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#adminstrators\\\" (click)=\\\"toggle('admin')\\\">ADMINISTRATORS</a>\\r\\n                </li>\\r\\n\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n\\r\\n            <div class=\\\"tab-content tab-content-custom\\\">\\r\\n                <div class=\\\"tab-pane active\\\" id=\\\"clientUsers\\\">\\r\\n                    <form (submit)=\\\"saveUserDeatails()\\\">\\r\\n\\r\\n                        <div class=\\\"card-body\\\" [formGroup]=\\\"userDetails\\\">\\r\\n                            <div class=\\\"action mb-3 d-flex justify-content-between w-100\\\">\\r\\n                                <a routerLink=\\\"/admin/userlist\\\" class=\\\"btn btn-primary\\\"><i class=\\\"material-icons\\\">arrow_back_ios</i> Back To Listing</a>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-container\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-lg-3 col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label>{{'AdminModule.Label.Email' | translate}}</label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Email\\\" disabled>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-lg-3 col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label>{{'AdminModule.Label.FirstName' | translate}}</label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"FirstName\\\">\\r\\n                                            <div class=\\\"form-text text-danger w-100\\\" *ngIf=\\\"userDetails.get('FirstName').touched && userDetails.get('FirstName').hasError('required')\\\">First Name {{'CoreModule.Validations.Required' | translate}}</div>\\r\\n                                            <div class=\\\"form-text text-danger w-100\\\" *ngIf=\\\"userDetails.get('FirstName').touched && !userDetails.get('FirstName').hasError('required') && userDetails.get('FirstName').hasError('blankValidation')\\\">{{'CoreModule.Validations.BlankValidation' | translate}}</div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-lg-3 col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label>{{'AdminModule.Label.LastName' | translate}}</label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"LastName\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-lg-3 col-md-6\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label>{{'AdminModule.Label.PhoneNumber' | translate}}</label>\\r\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"PhoneNumber\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div formArrayName=\\\"Projects\\\" class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-lg-3 col-md-6\\\" *ngFor=\\\"let project of userDetails?.controls['Projects']?.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\r\\n                                            <div class=\\\"form-check form-check-custom pl-0\\\">\\r\\n                                                <label>\\r\\n                                                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" formControlName=\\\"IsSelected\\\">{{userDetails.controls['Projects'].controls[i].controls['Name'].value | translate}}\\r\\n                                                    <span class=\\\"squire-check-mark\\\"></span>\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-text text-danger\\\" *ngIf=\\\"userDetails.get('Projects').hasError('multipleCheckboxRequireOne')\\\">{{'CoreModule.Validations.Select' | translate}}</div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n                <div class=\\\"tab-pane fade\\\" id=\\\"adminstrators\\\">\\r\\n                    <admin-list></admin-list>\\r\\n                </div>\\r\\n            </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    \\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/user-details/user-details.component.html\n// module id = ../../../../../src/app/Admin/user-details/user-details.component.html\n// module chunks = admin.module","import { Component, OnInit,OnDestroy } from '@angular/core';\r\nimport { AdminService } from '../services/admin.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { Validations } from './../../common'\r\nimport { HeaderService } from '../../core/services/header.sevice';\r\n\r\n@Component({\r\n    selector: 'user-details',\r\n    templateUrl: 'user-details.component.html'\r\n})\r\n\r\nexport class UserDetailsComponent implements OnInit ,OnDestroy{\r\n\r\n    \r\n\r\n    id: any = 0;\r\n    userDetails: any;\r\n    public isDisplayProjectList: any = false;\r\n    userProjects: any;\r\n    public subscription: any;\r\n    public headerData: any;\r\n\r\n    constructor(private adminService: AdminService, public router: Router, private activatedRoute: ActivatedRoute, private route: Router, private customValidation: Validations, private fb: FormBuilder, private _headerService: HeaderService) {\r\n\r\n        this.userDetails = this.fb.group({\r\n            Id:[],\r\n            PhoneNumber: [''],\r\n            FirstName: ['', Validators.compose([Validators.required, customValidation.validateNoBlankValues])],\r\n            LastName: [''],\r\n            Email: [''],\r\n            Projects: this.fb.array([this.initProject()\r\n            ],\r\n                customValidation.multipleCheckboxRequireOne\r\n            )\r\n        })\r\n    }   \r\n\r\n\r\n    ngOnInit(): void {\r\n        \r\n        //set headerData\r\n        this.setHeaderData();\r\n\r\n        //when form value update update the header data\r\n        this.userDetails.valueChanges.subscribe(res => {\r\n            this.setHeaderData();\r\n        });\r\n\r\n        //add subscription when sub-header button click. \r\n        this.subscription = this._headerService.headerChanges$.subscribe(action => {\r\n            if (action == 'update' && this.userDetails.invalid == false) this.saveUserDeatails();\r\n        });\r\n\r\n        // subscribe to router event\r\n        this.activatedRoute.queryParams.subscribe((params: Params) => {\r\n            this.id = params['Id'];\r\n            this.getUserDetails(this.id); \r\n        });\r\n\r\n       \r\n\r\n       \r\n    }\r\n\r\n    getUserDetails(userid: any) {\r\n        let that = this;\r\n \r\n        this.adminService.getUserDetails(this.id).subscribe(res => {\r\n            if (res) {\r\n                //this.userDetails = res.Data;\r\n\r\n                if (res.Data.Projects) {\r\n                    let dataLength = res.Data.Projects.length;\r\n                    let formControl = <FormArray>that.userDetails.controls[\"Projects\"];\r\n\r\n                    while (--dataLength) {\r\n                        formControl.push(this.initProject());\r\n                    }\r\n\r\n                }\r\n                this.userDetails.patchValue(res.Data);\r\n                \r\n            }\r\n        });\r\n    }\r\n\r\n    OnChange(e) {\r\n        var isChecked = e.target.checked;\r\n        if (isChecked) {\r\n            this.getProjectsList();\r\n            this.isDisplayProjectList = true;\r\n\r\n           }\r\n        else {\r\n           this.isDisplayProjectList = false;\r\n        }\r\n\r\n    }\r\n\r\n    getProjectsList() {\r\n        \r\n    }\r\n\r\n    initProject() {\r\n        return this.fb.group({\r\n            Id: [0],\r\n            Name: [''],\r\n            IsSelected: [false]\r\n        })\r\n    }\r\n\r\n    saveUserDeatails() {\r\n        this.userDetails.patchValue({ Id: this.id });\r\n        this.userDetails.value.FirstName = this.userDetails.value.FirstName.trim();\r\n        this.userDetails.value.LastName = this.userDetails.value.LastName.trim();\r\n        this.adminService.updateUserDetails(this.userDetails.value).subscribe(res => {\r\n            if (res.Data) {\r\n                //this.router.navigate(['admin/userlist']);\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeaderData() {\r\n        debugger    \r\n        //create Header Data.\r\n        this.headerData = { Title: \"USER DETAILS\" }\r\n        \r\n        this.headerData['buttons'] = [{ actionType: 'update', type: \"UPDATE USER\",  disabled: this.userDetails.invalid, isIcon: false }];\r\n\r\n        //emit header data to the subheader component.\r\n        this._headerService.emitChildChanges(this.headerData);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscription.unsubscribe();\r\n        this._headerService.emitChildChanges('');\r\n    }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/user-details/user-details.component.ts","module.exports = \"\\r\\n<div class=\\\"row user-list\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n        <div class=\\\"card has-tab has-shadow\\\">\\r\\n            <div class=\\\"card-header\\\">\\r\\n                <!-- Nav tabs -->\\r\\n                <ul class=\\\"nav tab-nav\\\">\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#clientUsers\\\" (click)=\\\"toggle('client')\\\">CLIENT USERS </a>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#adminstrators\\\" (click)=\\\"toggle('admin')\\\">ADMINISTRATORS</a>\\r\\n                    </li>\\r\\n\\r\\n                </ul>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n\\r\\n                <!-- Tab panes -->\\r\\n                <div class=\\\"tab-content tab-content-custom\\\">\\r\\n                    <nav aria-label=\\\"breadcrumb\\\" *ngIf=\\\"isClient\\\" >\\r\\n                        <ol class=\\\"breadcrumb\\\">\\r\\n                            <li class=\\\"breadcrumb-item\\\">\\r\\n                                <a class=\\\"btn btn-primary\\\" href=\\\"JavaScript: Void(0)\\\" routerLink=\\\"/admin/inviteuser\\\">\\r\\n                                    <i class=\\\"material-icons\\\">\\r\\n                                        add\\r\\n                                    </i> {{'AdminModule.Button.AddUser' | translate}}\\r\\n                                </a>\\r\\n                            </li>\\r\\n                        </ol>\\r\\n                    </nav>\\r\\n\\r\\n                    <div class=\\\"search-container form-container mt-4 mb-2\\\"  *ngIf=\\\"isClient\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <input class=\\\"form-control\\\" [(ngModel)]=\\\"searchText\\\" (input)=\\\"searchUser()\\\" placeholder=\\\"{{'AdminModule.Placeholder.SearchUser' | translate}}\\\">\\r\\n                            <button type=\\\"button\\\" (click)=\\\"searchUser()\\\" class=\\\"btn\\\"> <i class=\\\"material-icons\\\">zoom_in</i></button>\\r\\n\\r\\n                            <ul class=\\\"searh-list\\\">\\r\\n                                <li class=\\\"searh-list-item\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <i class=\\\"material-icons\\\">add</i> ADD USER\\r\\n                                    </button>\\r\\n                                    <span class=\\\"user\\\">User 01</span>\\r\\n                                </li>\\r\\n                                <li class=\\\"searh-list-item\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <i class=\\\"material-icons\\\">add</i> ADD USER\\r\\n                                    </button>\\r\\n                                    <span class=\\\"user\\\">User 01</span>\\r\\n                                </li>\\r\\n                                <li class=\\\"searh-list-item\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <i class=\\\"material-icons\\\">add</i> ADD USER\\r\\n                                    </button>\\r\\n                                    <span class=\\\"user\\\">User 01</span>\\r\\n                                </li>\\r\\n                                <li class=\\\"searh-list-item\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\">\\r\\n                                        <i class=\\\"material-icons\\\">add</i> ADD USER\\r\\n                                    </button>\\r\\n                                    <span class=\\\"user\\\">User 01</span>\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"tab-pane active\\\" id=\\\"clientUsers\\\">\\r\\n                        <div class=\\\"user-list-conainer scroll-x\\\">\\r\\n                            <h4 class=\\\"mb-3 t-header row-custom\\\">\\r\\n                                <span class=\\\"col\\\">\\r\\n                                    {{'AdminModule.Label.User' | translate}}<span class=\\\"badge badge-secondary ml-1\\\">{{totalUsers}}</span>\\r\\n                                </span>\\r\\n                                <!--<span class=\\\"col\\\">\\r\\n                                    Company\\r\\n                                </span>-->\\r\\n                            </h4>\\r\\n                            <ul class=\\\"list-group list-group-flush\\\">\\r\\n                                <li class=\\\"list-group-item d-flex flex-row px-0 has-edit-button\\\" *ngFor=\\\"let user of userList \\\">\\r\\n                                    <div class=\\\"row-custom\\\">\\r\\n                                        <div class=\\\"col\\\">\\r\\n                                            <div class=\\\"user-pic\\\" [ngStyle]=\\\"{'background-image': 'url(' + user.ProfilePhoto + ')'}\\\"></div>\\r\\n\\r\\n                                            <div class=\\\"text\\\">\\r\\n\\r\\n                                                <strong>{{user.FirstName}} {{user.LastName}}</strong>\\r\\n                                                <p class=\\\"mb-0 text-muted\\\">{{user.Email}}</p>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <!--<div class=\\\"col col-50\\\">\\r\\n                                            <strong>{{user.ComapanyName}}</strong>\\r\\n                                        </div>-->\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"buttons-group-holder\\\">\\r\\n                                        <button type=\\\"button\\\" (click)=\\\"deleteUser(user.Id)\\\" class=\\\"btn btn-primary btn-sm\\\"><i class=\\\"material-icons\\\">delete_forever</i></button>\\r\\n                                        <button type=\\\"button\\\" (click)=\\\"getUserDetails(user)\\\" class=\\\"btn btn-primary btn-sm\\\"><i class=\\\"material-icons\\\">edit</i></button>\\r\\n                                    </div>\\r\\n                                </li>\\r\\n\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"tab-pane fade\\\" id=\\\"adminstrators\\\">\\r\\n\\r\\n                       <admin-list></admin-list>\\r\\n\\r\\n                    </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/user-list/user-list.component.html\n// module id = ../../../../../src/app/Admin/user-list/user-list.component.html\n// module chunks = admin.module","import { Component, OnInit } from '@angular/core'\r\nimport { AdminService } from '../services/admin.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n    selector: 'user-list',\r\n    templateUrl: 'user-list.component.html'\r\n})\r\n\r\nexport class UserListComponent implements OnInit {\r\n    userList: any;\r\n    totalUsers: any;\r\n    searchText: any = '';\r\n    isClient: boolean=true;\r\n\r\n    constructor(private adminService: AdminService, public router: Router) {\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        this.adminService.getUserList('').subscribe(res => {\r\n            if (res) {\r\n                this.userList = res.Data;\r\n                this.totalUsers = this.userList.length;\r\n            }\r\n        });\r\n\r\n    }\r\n    getUserDetails(user: any) {\r\n        this.router.navigate(['/admin/userdetails'], { queryParams: { Id: user.Id } });\r\n    }\r\n\r\n    deleteUser(userid: any) {\r\n        var confirmflag = this.deleteConfirm();\r\n        if (confirmflag)\r\n        {\r\n                this.adminService.deleteUser(userid).subscribe(res => {\r\n                if (res) {\r\n                    this.adminService.getUserList('').subscribe(res => {\r\n                        if (res) {\r\n                            this.userList = res.Data;\r\n                            this.totalUsers = this.userList.length;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteConfirm() {\r\n        if (confirm(\"Are you sure you want to delete this user and their associated projects? \"))\r\n            return true;\r\n        else \r\n            return false;\r\n    }\r\n\r\n    searchUser() {\r\n        this.adminService.getUserList(this.searchText).subscribe(res => {\r\n            if (res) {\r\n                this.userList = res.Data;\r\n                this.totalUsers = this.userList.length;\r\n            }\r\n        });\r\n        \r\n    }\r\n    toggle(user: any) {\r\n\r\n        this.isClient = user == 'admin' ? false : true;\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/user-list/user-list.component.ts","module.exports = \"<div class=\\\"row work-item\\\">\\r\\n    <div class=\\\"col-md-offset-2 col-md-12\\\">\\r\\n        <div class=\\\"card has-shadow\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"form-container\\\" [formGroup]=\\\"workItemForm\\\">\\r\\n                    <div class=\\\"action mb-3 d-flex justify-content-between w-100\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" routerLink='/admin/userworkitemlist'> <i class=\\\"material-icons\\\">arrow_back_ios</i> Return To Work Items</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-4\\\" *ngIf=\\\"!isNew\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"#{{workItemId}}\\\" disabled />\\r\\n                                <small class=\\\"text-muted\\\">ID</small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div [ngClass]=\\\"{'col-md-8':!isNew,'col-md-12':isNew}\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'CustomerModule.Placeholder.AddTitle' | translate}}\\\" formControlName=\\\"Title\\\" />\\r\\n                                <small class=\\\"text-muted\\\">{{'CustomerModule.Label.Title' | translate}}</small>\\r\\n                                <div class=\\\"form-text text-danger w-100\\\" *ngIf=\\\"workItemForm.get('Title').touched && workItemForm.get('Title').hasError('required')\\\">{{'CustomerModule.Validations.TitleRequired' | translate}}</div>\\r\\n                                <div class=\\\"form-text text-danger w-100\\\" *ngIf=\\\"workItemForm.get('Title').touched && !workItemForm.get('Title').hasError('required') && workItemForm.get('Title').hasError('blankValidation')\\\">{{'CoreModule.Validations.BlankValidation' | translate}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <h5 class=\\\"sub-title\\\">{{'CustomerModule.Label.Description' | translate}}</h5>\\r\\n                        <div class=\\\"textarea-holder\\\">\\r\\n                            <ckeditor [config]=\\\"editorConfig.ConfigSetting\\\" formControlName=\\\"Description\\\" [readonly]=\\\"!deatilsEditable\\\"></ckeditor>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group form-group-discussion\\\">\\r\\n                        <h5 class=\\\"sub-title\\\">{{'CustomerModule.Label.Discussion' | translate}}</h5>\\r\\n                        <div class=\\\"textarea-holder\\\">\\r\\n                            <div class=\\\"mb-3\\\">\\r\\n\\r\\n                                <ckeditor [config]=\\\"editorConfig.DiscriptionConfig\\\" formControlName=\\\"Comment\\\" [readonly]=\\\"!customerFeedbackEditable\\\"></ckeditor>\\r\\n                            </div>\\r\\n                            <div class=\\\"box-holder\\\">\\r\\n                                <div class=\\\"box\\\" *ngFor=\\\"let item of workItemForm.controls['comments'].controls\\\">\\r\\n                                    <strong>{{item.controls['Date'].value}}</strong>\\r\\n                                    <p class=\\\"mb-0\\\">\\r\\n                                        <strong>USER:</strong> {{item.controls['Name'].value}}\\r\\n                                    </p>\\r\\n                                   \\r\\n                                    <strong >MESSAGE</strong>\\r\\n                                  \\r\\n                                    <div  class=\\\"form-control white-bg mt-1\\\"  [innerHTML]= \\\"item.controls['Text'].value\\\"></div>\\r\\n                                </div>\\r\\n                                \\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/work-item/addwork-item.component.html\n// module id = ../../../../../src/app/Admin/work-item/addwork-item.component.html\n// module chunks = admin.module","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AdminService } from '../services/admin.service';\r\nimport { FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n\r\nimport { CkEditorConfig } from './../../common'\r\nimport { HeaderService } from '../../core/services/header.sevice';\r\n\r\nimport { Validations } from './../../common'\r\n\r\n@Component({\r\n    selector: 'addwork-item-admin',\r\n    templateUrl: 'addwork-item.component.html'\r\n})\r\n\r\nexport class WorkItemComponent implements OnInit, OnDestroy {\r\n\r\n    public titleEditable: any = true;\r\n    public customerFeedbackEditable: any = true;\r\n    public deatilsEditable: any = true;\r\n    public workItemForm: any;\r\n    public projectId: any;\r\n    public workItemId: number = 0;\r\n    public isNew: boolean = true\r\n    editorConfig: any = CkEditorConfig;\r\n    public subscription: any;\r\n    public headerData: any;\r\n\r\n    ngOnInit(): void {\r\n\r\n        //set headerData.\r\n        this.setHeaderData();\r\n\r\n        //add subscription when sub-header button click. \r\n        this.subscription = this._headerService.headerChanges$.subscribe(action => {\r\n            if (action == 'add')\r\n                this.createWorkItem();\r\n        });\r\n\r\n        //when form value update update the header data\r\n        this.workItemForm.valueChanges.subscribe(res => {\r\n            this.setHeaderData();\r\n        });\r\n\r\n        let that = this;\r\n        let url = this.router.url;\r\n        this.projectId = url.substr((url.lastIndexOf('/') + 1));\r\n\r\n        this.activatedRoute.data.subscribe(res => {\r\n\r\n            that.isNew = res.isNew;\r\n            let routerData: string[] = this.router.routerState.snapshot.url.split('/');\r\n            if (res.isNew) {\r\n                that.projectId = routerData[3];\r\n            } else {\r\n                that.projectId = routerData[3];\r\n                that.workItemId = Number(routerData[5]);\r\n                this.getWorkItemDetail();\r\n                this.getEditableItems(that.projectId);\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    constructor(private adminService: AdminService, private activatedRoute: ActivatedRoute, private customValidation: Validations, public fb: FormBuilder, private router: Router, private _headerService: HeaderService) {\r\n        this.workItemForm = fb.group({\r\n            Id: [0],\r\n            ProjectId: [''],\r\n            Title: ['', Validators.compose([Validators.required, customValidation.validateNoBlankValues])],\r\n            State: [''],\r\n            Description: [''],\r\n            WorkItemId: [''],\r\n            Comment: [''],\r\n            comments: this.fb.array([])\r\n        });\r\n    }\r\n\r\n    initCommentList() {\r\n        return this.fb.group({\r\n            Name: [''],\r\n            Text: [''],\r\n            Date: ['']\r\n        })\r\n    }\r\n\r\n    createWorkItem() {\r\n        this.workItemForm.controls['Title'].enable();\r\n        this.workItemForm.patchValue({ Id: this.projectId, WorkItemId: this.workItemId });\r\n        if (this.titleEditable)\r\n            this.workItemForm.value.Title = this.workItemForm.value.Title.trim();\r\n        this.adminService.createWorkItem(this.workItemForm.value, this.projectId).subscribe(res => {\r\n            if (res.Data) {\r\n                this.router.navigateByUrl('/admin/userworkitemlist');\r\n            }\r\n        });\r\n    }\r\n\r\n    getWorkItemDetail() {\r\n        this.adminService.getWorkItem(this.projectId, this.workItemId).subscribe(res => {\r\n\r\n            if (res) {\r\n                this.workItemForm.patchValue(res.Data);\r\n                let length = res.Data.CommentList.length;\r\n                let control = <FormArray>this.workItemForm.controls['comments'];\r\n                while (length--) {\r\n                    control.push(this.initCommentList());\r\n                }\r\n                this.workItemForm.patchValue({ comments: res.Data.CommentList })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkItem() {\r\n        this.workItemForm.patchValue({ Id: this.projectId, WorkItemId: this.workItemId });\r\n        this.adminService.createWorkItem(this.workItemForm.getRawValue(), this.projectId).subscribe(res => {\r\n            if (res.Data) {\r\n                this.router.navigateByUrl('/workitemlist');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    getEditableItems(projectId: any): any {\r\n        let that = this;\r\n        this.adminService.GetEditableItems(projectId).subscribe(res => {\r\n            if (res.Data) {\r\n                this.titleEditable = res.Data.Title;\r\n                this.deatilsEditable = res.Data.Details;\r\n                this.customerFeedbackEditable = res.Data.CustomerFeedback;\r\n                if (!res.Data.Title) {\r\n                    that.workItemForm.controls['Title'].disable();\r\n                }\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    setHeaderData() {\r\n\r\n        //create Header Data.\r\n        this.headerData = { Title: \"WORK ITEM\" }\r\n        this.headerData['buttons'] = [{ actionType: 'add', type: \"Save\", disabled: this.workItemForm.invalid, isIcon: false }];\r\n\r\n        //emit header data to the subheader component.\r\n        this._headerService.emitChildChanges(this.headerData);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n        this._headerService.emitChildChanges('');\r\n\r\n    }\r\n\r\n}   \n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/work-item/addwork-item.component.ts","module.exports = \"<div class=\\\"card has-shadow\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <form [formGroup]=\\\"searchItemForm\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div *ngIf=\\\"projects.Project.length > 1\\\" class=\\\"form-group\\\">\\r\\n                                <select class=\\\"custom-select custom-select-secondary white-bg\\\" formControlName=\\\"ProjectId\\\">\\r\\n                                    <option *ngFor=\\\"let item of projects.Project\\\" [ngValue]=\\\"item.Id\\\">{{item.Name}}</option>\\r\\n                                </select>\\r\\n                                <small class=\\\"text-muted\\\">Project</small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-md-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <select class=\\\"custom-select custom-select-secondary white-bg\\\" formControlName=\\\"ProjectStatus\\\">\\r\\n                                    <option value=\\\"Select\\\">  Select State  </option>\\r\\n                                    <option *ngFor=\\\"let item of projects.projectStatus\\\" [ngValue]=\\\"item\\\">{{item}}</option>\\r\\n                                </select>\\r\\n                                <small class=\\\"text-muted\\\">State</small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n\\r\\n                    <div class=\\\"search-container form-container\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search By Title\\\" formControlName=\\\"Title\\\" />\\r\\n                            <button type=\\\"button\\\" class=\\\"btn\\\"> <i class=\\\"material-icons\\\">zoom_in</i></button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n\\r\\n\\r\\n        <kendo-grid [data]=\\\"gridView\\\" [pageSize]=\\\"pageSize\\\" [skip]=\\\"skip\\\" [pageable]=\\\"true\\\" [selectable]=\\\"true\\\" (pageChange)=\\\"pageChange($event)\\\"\\r\\n                    (selectionChange)=\\\"selectedRowChange($event)\\\" [height]=\\\"410\\\">\\r\\n            <kendo-grid-column field=\\\"Field.WorkItemType\\\" title=\\\"{{'CustomerModule.Label.WorkItemType' | translate}}\\\" width=\\\"125\\\" *ngIf=\\\"showWorkItemType\\\">\\r\\n            </kendo-grid-column>\\r\\n            <kendo-grid-column field=\\\"Field.Id\\\" title=\\\"Id\\\" width=\\\"60\\\" *ngIf=\\\"showWorkItemId\\\">\\r\\n            </kendo-grid-column>\\r\\n            <kendo-grid-column field=\\\"Field.Title\\\" class=\\\"link\\\" title=\\\"{{'CustomerModule.Label.Title' | translate}}\\\" width=\\\"300\\\" *ngIf=\\\"showTitle\\\">\\r\\n            </kendo-grid-column>\\r\\n            <kendo-grid-column field=\\\"Field.State\\\" title=\\\"{{'CustomerModule.Label.State' | translate}}\\\" width=\\\"100\\\" *ngIf=\\\"showState\\\">\\r\\n            </kendo-grid-column>\\r\\n\\r\\n            <div *kendoGridDetailTemplate=\\\"let dataItem\\\">\\r\\n                <workitem-listchild-admin *ngIf=\\\"dataItem.ChildList.length>0\\\" [childList]=\\\"dataItem.ChildList\\\"></workitem-listchild-admin>\\r\\n            </div>\\r\\n\\r\\n        </kendo-grid>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/workitemlist/workitem-list.component.html\n// module id = ../../../../../src/app/Admin/workitemlist/workitem-list.component.html\n// module chunks = admin.module","import { Component, OnDestroy ,OnInit} from '@angular/core'\r\nimport { GridDataResult, PageChangeEvent, SelectionEvent } from '@progress/kendo-angular-grid'\r\nimport { SortDescriptor } from '@progress/kendo-data-query'\r\nimport { FormBuilder } from '@angular/forms'\r\nimport { Observable } from 'rxjs'\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport { AdminService } from '../services/admin.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataModel, Projects } from './../../common';\r\nimport { HeaderService } from '../../core/services/header.sevice';\r\n\r\n\r\n@Component({\r\n    selector: 'app-work-item-list-admin',\r\n    templateUrl: 'workitem-list.component.html'\r\n})\r\nexport class WorkItemListComponent implements OnDestroy,OnInit {\r\n    items: any[]\r\n    gridItem: any[]\r\n    childItem: any[] = [];\r\n    public gridView: GridDataResult;\r\n    private data: Object[];\r\n    searchItemForm: any;\r\n    projects = Projects;\r\n    public pageSize = 10;\r\n    public skip = 0;\r\n    public showWorkItemId: any = true;\r\n    public showWorkItemType: any = true;\r\n    public showTitle: any = true;\r\n    public showState: any = true;\r\n    public subscription: any;\r\n    public headerData: any;\r\n\r\n    constructor(private adminService: AdminService, private router: Router, private fb: FormBuilder, private _headerService:HeaderService) {\r\n   \r\n        this.projects.projectStatus = [];\r\n        this.searchItemForm = this.fb.group({\r\n            Title: [''],\r\n            ProjectId: [''],\r\n            ProjectStatus: ['Select']\r\n        })\r\n       \r\n        \r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n       \r\n        //set header data.\r\n        this.setHeaderData();\r\n\r\n        //add subscription when sub-header button click. \r\n        this.subscription = this._headerService.headerChanges$.subscribe(data => {\r\n                if (data == 'add')\r\n                    this.addNewWorkItem();\r\n        });\r\n        \r\n        this.adminService.getProjectList().subscribe(res => {\r\n            if (res) {\r\n                this.projects.Project = res.Data.map(o => { return { Id: o.Id, Name: o.Name }; });\r\n                Projects.resetProjectList(this.projects.Project);\r\n                if (!Projects.selectedProjectId) {\r\n                    Projects.setSelectedProject(Projects.Project[0].Id);\r\n                }\r\n                DataModel.ProjectId = Projects.selectedProjectId;\r\n                if (this.projects.projectStatus.length == 0) {\r\n                    this.getProjectStatus(this.projects.selectedProjectId);\r\n                }\r\n                let that = this;\r\n                this.loadData();\r\n                this.getGridColumnFields();\r\n                this.searchItemForm = this.fb.group({\r\n                    Title: [''],\r\n                    ProjectId: [''],\r\n                    ProjectStatus: ['Select']\r\n                })\r\n\r\n                this.searchItemForm.patchValue({ ProjectId: this.projects.selectedProjectId });\r\n\r\n                this.searchItemForm.controls['Title'].valueChanges.debounceTime(500).subscribe(res => {\r\n                    this.SearchItembyTitleAndState(res, this.searchItemForm.controls['ProjectStatus'].value)\r\n                })\r\n               \r\n                this.searchItemForm.controls['ProjectId'].valueChanges.debounceTime(500).subscribe(res => {\r\n                    this.projects.setSelectedProject(res);\r\n                    this.getProjectStatus(res);\r\n                    DataModel.ProjectId = res;\r\n                    this.loadData();\r\n                    this.getGridColumnFields();\r\n\r\n                })\r\n\r\n                this.searchItemForm.controls['ProjectStatus'].valueChanges.debounceTime(300).subscribe(res => {\r\n                    this.SearchItembyTitleAndState(this.searchItemForm.controls['Title'].value, res)\r\n                })\r\n\r\n            }\r\n        });\r\n       \r\n    }\r\n\r\n    getProjectStatus(id: number) {\r\n        let that = this;\r\n        this.adminService.getProjectStatusByProjectId(id).subscribe(res => {\r\n            that.projects.projectStatus = [];\r\n            that.projects.projectStatus.push.apply(that.projects.projectStatus, res.Data);\r\n        })\r\n    }\r\n\r\n\r\n    loadData() {\r\n        this.adminService.getProjectWorkItem(DataModel.ProjectId).subscribe(res => {\r\n            if (res && res.Data.Items) {\r\n                this.items = res.Data.Items;\r\n                this.gridItem = res.Data.Items;\r\n                this.setGrid();\r\n            }\r\n        })\r\n\r\n    }\r\n    getGridColumnFields() {\r\n        this.adminService.getGridColumnFields(DataModel.ProjectId).subscribe(res => {\r\n            if (res && res.Data) {\r\n\r\n                this.showWorkItemId = res.Data.WorkItemId;\r\n                this.showWorkItemType = res.Data.WorkItemType;\r\n                this.showTitle = res.Data.Title;\r\n                this.showState = res.Data.State;\r\n                this.setGrid();\r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    setGrid() {\r\n        if (this.gridItem) {\r\n            this.gridView = {\r\n                data: this.gridItem.slice(this.skip, this.skip + this.pageSize),\r\n                total: this.gridItem.length\r\n            };\r\n\r\n            this.gridView.data.forEach((data) => { if (data.Field.Id == 0) { data.Field.Id = '' } });\r\n        }\r\n    }\r\n\r\n    public pageChange(event: PageChangeEvent): void {\r\n        this.skip = event.skip;\r\n        this.setGrid();\r\n    }\r\n\r\n\r\n    public selectedRowChange(selectionEvent: SelectionEvent) {\r\n            \r\n        let selectedItem = selectionEvent.selectedRows[0][\"dataItem\"];//this.gridView.data[selectionEvent.index];\r\n        \r\n        if (selectedItem[\"Field\"][\"Id\"] > 0) \r\n            this.router.navigate(['admin','project', DataModel.ProjectId, 'workitem', selectedItem[\"Field\"][\"Id\"], 'edit']);\r\n    }\r\n\r\n    addNewWorkItem() {\r\n        this.router.navigate(['admin','project', DataModel.ProjectId, 'workitem', 'add']);\r\n    }\r\n\r\n   \r\n\r\n    SearchItembyTitleAndState(title: string, state: any) {\r\n        let that = this;\r\n        this.skip = 0;\r\n        that.childItem = [];\r\n        let parentItem: any[];\r\n        if (title && state && state != \"Select\") {\r\n            parentItem = this.items.filter(x => x.Field.Title.toLowerCase().indexOf(title.toLowerCase()) > -1);\r\n            if (parentItem.length > 0) {\r\n                parentItem.forEach(element => {\r\n                    element.ChildList = element.ChildList.length > 0 ? element.ChildList.filter(x => x.Title.toLowerCase().indexOf(title.toLowerCase()) > -1) : []\r\n                });\r\n            }\r\n\r\n            this.items.forEach(ele => {\r\n                let item = ele.ChildList.length > 0 ? ele.ChildList.filter(x => x.Title.toLowerCase().indexOf(title.toLowerCase()) > -1) : [];\r\n                that.childItem.push.apply(that.childItem, item);\r\n            })\r\n\r\n            for (let item of parentItem) {\r\n                let subItems = item['ChildList'];\r\n                for (let subItem of subItems) {\r\n                    let index = that.childItem.indexOf(subItem);\r\n                    that.childItem.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            for (let item of that.childItem) {\r\n                let obj = {\r\n                    Field: item,\r\n                    count: 0,\r\n                    ChildList: []\r\n                }\r\n\r\n                parentItem.push(obj);\r\n            }\r\n\r\n            let searchPrentItem = parentItem;\r\n            that.childItem = [];\r\n\r\n            parentItem = searchPrentItem.filter(x => x.Field.State.toLowerCase().indexOf(state.toLowerCase()) > -1);\r\n            if (parentItem.length > 0) {\r\n                parentItem.forEach(element => {\r\n                    element.ChildList = element.ChildList.length > 0 ? element.ChildList.filter(x => x.State.toLowerCase().indexOf(state.toLowerCase()) > -1) : []\r\n                });\r\n            }\r\n\r\n            searchPrentItem.forEach(ele => {\r\n                let item = ele.ChildList.length > 0 ? ele.ChildList.filter(x => x.State.toLowerCase().indexOf(state.toLowerCase()) > -1) : [];\r\n                that.childItem.push.apply(that.childItem, item);\r\n            })\r\n\r\n            for (let item of parentItem) {\r\n                let subItems = item['ChildList'];\r\n                for (let subItem of subItems) {\r\n                    let index = that.childItem.indexOf(subItem);\r\n                    that.childItem.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            for (let item of that.childItem) {\r\n                let obj = {\r\n                    Field: item,\r\n                    count: 0,\r\n                    ChildList: []\r\n                }\r\n\r\n                parentItem.push(obj);\r\n            }\r\n\r\n\r\n\r\n        } else if (title) {\r\n            parentItem = this.items.filter(x => x.Field.Title.toLowerCase().indexOf(title.toLowerCase()) > -1);\r\n            if (parentItem.length > 0) {\r\n                parentItem.forEach(element => {\r\n                    element.ChildList = element.ChildList.length > 0 ? element.ChildList.filter(x => x.Title.toLowerCase().indexOf(title.toLowerCase()) > -1) : []\r\n                });\r\n            }\r\n\r\n            this.items.forEach(ele => {\r\n                let item = ele.ChildList.length > 0 ? ele.ChildList.filter(x => x.Title.toLowerCase().indexOf(title.toLowerCase()) > -1) : [];\r\n                that.childItem.push.apply(that.childItem, item);\r\n            })\r\n\r\n            for (let item of parentItem) {\r\n                let subItems = item['ChildList'];\r\n                for (let subItem of subItems) {\r\n                    let index = that.childItem.indexOf(subItem);\r\n                    that.childItem.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            for (let item of that.childItem) {\r\n                let obj = {\r\n                    Field: item,\r\n                    count: 0,\r\n                    ChildList: []\r\n                }\r\n\r\n                parentItem.push(obj);\r\n            }\r\n\r\n        } else if (state && state != \"Select\") {\r\n            parentItem = this.items.filter(x => x.Field.State.toLowerCase() == state.toLowerCase());\r\n            if (parentItem.length > 0) {\r\n                parentItem.forEach(element => {\r\n                    element.ChildList = element.ChildList.length > 0 ? element.ChildList.filter(x => x.State.toLowerCase() == state.toLowerCase()) : []\r\n                });\r\n            }\r\n\r\n            this.items.forEach(ele => {\r\n                let item = ele.ChildList.length > 0 ? ele.ChildList.filter(x => x.State.toLowerCase() == state.toLowerCase()) : [];\r\n                that.childItem.push.apply(that.childItem, item);\r\n            })\r\n\r\n            for (let item of parentItem) {\r\n                let subItems = item['ChildList'];\r\n                for (let subItem of subItems) {\r\n                    let index = that.childItem.indexOf(subItem);\r\n                    that.childItem.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            for (let item of that.childItem) {\r\n                let obj = {\r\n                    Field: item,\r\n                    count: 0,\r\n                    ChildList: []\r\n                }\r\n\r\n                parentItem.push(obj);\r\n            }\r\n        } else {\r\n            parentItem = this.items;\r\n        }\r\n\r\n        this.gridItem = parentItem;\r\n        this.setGrid();\r\n\r\n    }\r\n\r\n    setHeaderData() {\r\n        //create Header Data.\r\n        this.headerData = { Title: \"WORK ITEMS\" }\r\n        this.headerData['buttons'] = [{ actionType: 'add', type: \"ADD WORK ITEM\", disabled: false, isIcon: true, iconText:'add' }];\r\n\r\n        //emit header data to the subheader component.\r\n        this._headerService.emitChildChanges(this.headerData);\r\n    }\r\n    ngOnDestroy() {\r\n        \r\n        this.subscription.unsubscribe();\r\n        this._headerService.emitChildChanges('');\r\n\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/workitemlist/workitem-list.component.ts","module.exports = \"<kendo-grid [data]=\\\"gridData\\\"\\r\\n            [pageSize]=\\\"pageSize\\\"\\r\\n            [skip]=\\\"skip\\\"\\r\\n            [pageable]=\\\"true\\\"\\r\\n            [selectable]=\\\"true\\\"\\r\\n            (selectionChange)=\\\"selectedRowChange($event)\\\"\\r\\n            (pageChange)=\\\"pageChange($event)\\\"\\r\\n             [height]=\\\"150\\\"\\r\\n              >\\r\\n    <kendo-grid-column field=\\\"WorkItemType\\\" title=\\\"{{'CustomerModule.Label.WorkItemType' | translate}}\\\" width=\\\"50\\\" *ngIf=\\\"showWorkItemType\\\">\\r\\n    </kendo-grid-column>\\r\\n    <kendo-grid-column field=\\\"Id\\\" title=\\\"Id\\\" width=\\\"50\\\" *ngIf=\\\"showWorkItemId\\\">\\r\\n    </kendo-grid-column>\\r\\n    <kendo-grid-column field=\\\"Title\\\" class=\\\"link\\\" title=\\\"{{'CustomerModule.Label.Title' | translate}}\\\" width=\\\"290\\\" *ngIf=\\\"showTitle\\\">\\r\\n    </kendo-grid-column>\\r\\n    <kendo-grid-column field=\\\"State\\\" title=\\\"{{'CustomerModule.Label.State' | translate}}\\\" width=\\\"100\\\" *ngIf=\\\"showState\\\">\\r\\n    </kendo-grid-column>\\r\\n</kendo-grid>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/workitemlist/workitem-listchild.component.html\n// module id = ../../../../../src/app/Admin/workitemlist/workitem-listchild.component.html\n// module chunks = admin.module","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GridDataResult, PageChangeEvent, DataStateChangeEvent, SelectionEvent } from '@progress/kendo-angular-grid';\r\nimport { Router } from '@angular/router';\nimport { Projects } from './../../common';\nimport { AdminService } from '../services/admin.service';\r\n\r\n\r\n@Component({\r\n    selector: 'workitem-listchild-admin',\r\n    templateUrl: 'workitem-listchild.component.html'\r\n})\r\nexport class WorkItemChildListComponent implements OnInit {\r\n\r\n    @Input() public childList: any[];\r\n    public gridData: GridDataResult;\r\n    private data: Object[];\r\n    items: any[];\r\n    projects = Projects;\r\n    showWorkItemId:any = true;\r\n    showWorkItemType: any = true;\r\n    showTitle:any=true;\r\n    showState: any = true;\r\n    public pageSize = 5;\r\n    public skip = 0;\r\n\r\n\r\n    constructor(private router: Router, private adminService: AdminService) { }\r\n\r\n    ngOnInit() {\r\n        this.loadData();\r\n        this.getGridColumnFields();\r\n    }\r\n\r\n    loadData() {\r\n        this.gridData = {\r\n            data: this.childList.slice(this.skip, this.skip + this.pageSize),\r\n            total: this.childList.length\r\n        };\r\n    }\r\n    getGridColumnFields() {\r\n        this.adminService.getGridColumnFields(this.projects.selectedProjectId).subscribe(res => {\r\n            if (res && res.Data) {\r\n\r\n                this.showWorkItemId = res.Data.WorkItemId;\r\n                this.showWorkItemType = res.Data.WorkItemType;\r\n                this.showTitle = res.Data.Title;\r\n                this.showState = res.Data.State;\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    public pageChange(event: PageChangeEvent): void {\r\n        this.skip = event.skip;\r\n        this.loadData();\r\n    }\r\n\r\n    public dataStateChange({ skip, take, sort }: DataStateChangeEvent): void {\r\n        this.skip = skip;\r\n        this.pageSize = take;\r\n        this.loadData();\r\n    }\r\n\r\n    public selectedRowChange(selectionEvent: SelectionEvent) {\r\n\r\n        //let selectedItem = this.gridData.data[selectionEvent.index];\r\n        //this.router.navigateByUrl('/admin/project/' + this.projects.selectedProjectId + '/workitem/' + selectedItem[\"Id\"] + '/edit');\r\n        this.router.navigateByUrl('/admin/project/' + this.projects.selectedProjectId + '/workitem/' + selectionEvent.selectedRows[0].dataItem.Id + '/edit');\r\n       \r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/Admin/workitemlist/workitem-listchild.component.ts"],"sourceRoot":"webpack:///"}