{"version":3,"sources":["E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/core.module.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/core.routes.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/create-password/create-password.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/create-password/create-password.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/forgot-password/forgot-password.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/forgot-password/forgot-password.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/header/header.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/header/header.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/index.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/login/login.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/login/login.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/reset-password/reset-password.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/reset-password/reset-password.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/services/core.service.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/sub-header/sub-header.component.html","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/sub-header/sub-header.component.ts","E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/vsts-token/tfs-token.ts"],"names":[],"mappings":"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","file":"core.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core'\r\nimport { CoreRouteModule } from './core.routes'\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nimport { CommonModule } from '@angular/common';\r\nimport { CommonCustomModule } from '../common'\r\nimport { LoginComponent, ForgotPassword, CoreService, TFSTokenComponent, ResetPasswordComponent, HeaderComponent, CreatePasswordComponent } from './index'\r\nimport { HeaderService } from './services/header.sevice';\r\nimport { NewHeaderComponent } from './sub-header/sub-header.component';\r\n\r\n@NgModule({\r\n    imports: [CoreRouteModule, ReactiveFormsModule, CommonModule, CommonCustomModule],\r\n    declarations: [LoginComponent, ForgotPassword, ResetPasswordComponent, TFSTokenComponent, HeaderComponent, CreatePasswordComponent, NewHeaderComponent],\r\n    exports: [],\r\n    providers: [CoreService,HeaderService]\r\n})\r\n\r\nexport class CoreModule {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/core.module.ts","import { NgModule } from '@angular/core'\r\nimport { Routes, RouterModule } from '@angular/router'\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms'\r\n\r\nimport { LoginAuthGuard, PermissionAuthGuard } from '../common'\r\nimport { LoginComponent, ForgotPassword, CoreService, TFSTokenComponent, ResetPasswordComponent, HeaderComponent, CreatePasswordComponent } from './index'\r\n\r\nconst routes: Routes = [\r\n    { path: 'login', component: LoginComponent ,  canActivate: [LoginAuthGuard] },\r\n    { path: 'add-password', component: CreatePasswordComponent },\r\n    { path: 'forgot-password', component: ForgotPassword },\r\n    { path: 'oauth/callback', component: TFSTokenComponent },\r\n    { path: 'reset-password', component: ResetPasswordComponent },\r\n    {\r\n        path: '', component: HeaderComponent,\r\n        children: [\r\n            { path: '', loadChildren: '../Customer/customer.module#CustomerModule', canActivate: [LoginAuthGuard, PermissionAuthGuard] },\r\n            { path: 'admin', loadChildren: '../Admin/admin.module#AdminModule', canActivate: [LoginAuthGuard, PermissionAuthGuard] }\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class CoreRouteModule {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/core.routes.ts","module.exports = \"<div class=\\\"container container-account\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-md-10 col-lg-5\\\">\\r\\n            <div class=\\\"card-group\\\">\\r\\n                <div class=\\\"card p-4\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <h1 >{{'CoreModule.Label.Create' | translate}}</h1>\\r\\n                        <div [formGroup]=\\\"addPasswordForm\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input [ngClass]=\\\"{'is-invalid':addPasswordForm.get('Password').touched && addPasswordForm.get('Password').invalid }\\\" formControlName=\\\"Password\\\" placeholder=\\\"{{'CoreModule.Placeholder.Password' | translate}}\\\" class=\\\"form-control\\\" type=\\\"password\\\">\\r\\n                                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"addPasswordForm.get('Password').touched && addPasswordForm.get('Password').hasError('required')\\\">{{'CoreModule.Validations.Required' | translate}}</div>\\r\\n                                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"!addPasswordForm.get('Password').hasError('required')&& addPasswordForm.get('Password').touched && addPasswordForm.get('Password').hasError('passwordFormat')\\\">{{'CoreModule.Validations.PasswordFormat' | translate}}</div>\\r\\n\\r\\n                            </div>\\r\\n                           \\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input [ngClass]=\\\"{'is-invalid':addPasswordForm.get('ConfirmPassword').touched && addPasswordForm.get('ConfirmPassword').invalid }\\\" formControlName=\\\"ConfirmPassword\\\" placeholder=\\\"{{'CoreModule.Placeholder.ConfirmPassword' | translate}}\\\" class=\\\"form-control\\\" type=\\\"password\\\">\\r\\n                                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"addPasswordForm.get('ConfirmPassword').touched && addPasswordForm.get('ConfirmPassword').hasError('required')\\\">{{'CoreModule.Validations.Required' | translate}}</div>\\r\\n                                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"!addPasswordForm.get('ConfirmPassword').hasError('required')&&addPasswordForm.hasError('match') \\\">{{'CoreModule.Validations.MatchPassword' | translate}}</div>\\r\\n                            </div>\\r\\n                            \\r\\n                            <div>\\r\\n                                <button class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"addPasswordForm.invalid\\\"  (click)=\\\"createPassword()\\\">{{'CoreModule.Button.Create' | translate}}</button>\\r\\n                            </div>\\r\\n                        </div>                       \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/create-password/create-password.component.html\n// module id = ../../../../../src/app/core/create-password/create-password.component.html\n// module chunks = core.module","import { Component, OnInit } from '@angular/core';\r\nimport { CoreService } from '../services/core.service';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Validations } from '../../common';\r\ndeclare var jquery: any;\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'create-password',\r\n    templateUrl: 'create-password.component.html'\r\n})\r\n\r\nexport class CreatePasswordComponent implements OnInit {\r\n    body: any;\r\n    id: string;\r\n    addPasswordForm: FormGroup;\r\n    BackgroundImageUrlForLogin: any=\"\";\r\n\r\n\r\n    constructor(private coreService: CoreService, public fb: FormBuilder, private activatedRoute: ActivatedRoute, private router: Router, private customValidation: Validations) {\r\n        this.addPasswordForm = this.fb.group({\r\n            Password: ['', Validators.compose([Validators.required, Validators.minLength(6), customValidation.validatePassword])],\r\n            ConfirmPassword: ['', Validators.required],\r\n            UserId: [this.id],\r\n\r\n        }, { validator: customValidation.matchPassword })\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.activatedRoute.queryParams.subscribe(params => {\r\n            this.id = params['userId']\r\n            this.addPasswordForm.patchValue({UserId : this.id});\r\n        })\r\n        this.body = document.getElementsByTagName('body')[0];\r\n        this.body.classList.add(\"account-theme\");\r\n        this.getCompanySettings();\r\n    }\r\n\r\n    createPassword() {\r\n        this.coreService.createPassword(this.addPasswordForm.value).subscribe(res => {\r\n            if (res.Data) {\r\n                this.router.navigateByUrl('/login');\r\n            }\r\n        })\r\n\r\n    }\r\n    getCompanySettings() {\r\n        this.coreService.getCompanySettings()\r\n            .subscribe(res => {\r\n                if (res.Data) {\r\n                    this.BackgroundImageUrlForLogin = res.Data.BackgroundImageUrlForLogin;\r\n                    $('body').css({ 'background-image': 'url(' + this.BackgroundImageUrlForLogin + ')', 'background-repeat': 'no-repeat' });\r\n                }\r\n            });\r\n    }\r\n\r\n    // Remove class from body tag\r\n    ngOnDestroy() {\r\n        this.body = document.getElementsByTagName('body')[0];\r\n        this.body.classList.remove(\"account-theme\");\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/create-password/create-password.component.ts","module.exports = \"<div class=\\\"container container-account\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-md-10 col-lg-5\\\">\\r\\n            <div class=\\\"card-group\\\">\\r\\n                <div class=\\\"card p-4\\\">\\r\\n                    <div *ngIf=\\\"!isUserNameValid\\\" class=\\\"card-body\\\" [formGroup]=\\\"forgotPasswordForm\\\">\\r\\n                        <h1>{{'CoreModule.Label.ForgotPassword' | translate}}</h1>\\r\\n                        <p>{{'CoreModule.Label.ResetPassword' | translate}}</p>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <input [ngClass]=\\\"{'is-invalid' : forgotPasswordForm.get('Username').touched && forgotPasswordForm.get('Username').hasError('required') || !forgotPasswordForm.get('Username').hasError('required') && forgotPasswordForm.get('Username').hasError('emailFormat')}\\\" formControlName=\\\"Username\\\" placeholder=\\\"{{'CoreModule.Placeholder.EmailAddress' | translate}}\\\" class=\\\"form-control\\\" type=\\\"email\\\">\\r\\n                            <div class=\\\"form-text text-danger\\\" *ngIf=\\\"forgotPasswordForm.get('Username').touched && forgotPasswordForm.get('Username').hasError('required')\\\">{{'CoreModule.Validations.Required' | translate}}</div>\\r\\n                            <div class=\\\"form-text text-danger\\\" *ngIf=\\\"!forgotPasswordForm.get('Username').hasError('required') && forgotPasswordForm.get('Username').hasError('emailFormat') \\\">{{'CoreModule.Validations.EmailFormat' | translate}}</div>\\r\\n                        </div>\\r\\n                        \\r\\n                        <div>\\r\\n                            <input class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"forgotPasswordForm.invalid\\\" value=\\\"{{'CoreModule.Button.Reset' | translate}}\\\" (click)=\\\"forgotPassword()\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6 text-right\\\">\\r\\n                            <a class=\\\"btn-link px-0\\\" routerLink=\\\"/login\\\">{{'CoreModule.Button.Continue' | translate}}</a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/forgot-password/forgot-password.component.html\n// module id = ../../../../../src/app/core/forgot-password/forgot-password.component.html\n// module chunks = core.module","import { Component } from '@angular/core';\r\nimport { CoreService } from '../services/core.service';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\r\nimport { Validations } from '../../common'\r\ndeclare var jquery: any;\r\ndeclare var $: any;\r\n\r\n\r\n@Component({\r\n    selector: 'forgot-password',\r\n    templateUrl: 'forgot-password.component.html'\r\n})\r\n\r\nexport class ForgotPassword {\r\n    body: any;\r\n    public isUserNameValid: any = false;\r\n    forgotPasswordForm: FormGroup;\r\n    BackgroundImageUrlForLogin: any = \"\";\r\n    constructor(private coreService: CoreService, public fb: FormBuilder, private customValidation: Validations, private router: Router) {\r\n        this.forgotPasswordForm = this.fb.group({\r\n            Username: ['', Validators.compose([Validators.required, customValidation.validateEmail])],\r\n        })\r\n    }\r\n\r\n    forgotPassword() {\r\n        this.coreService.sendForgotPasswordLink(this.forgotPasswordForm.value).subscribe(res => {\r\n            this.isUserNameValid = res;\r\n            if (res) {\r\n                this.router.navigate(['/login']);\r\n            }\r\n        })\r\n    }\r\n\r\n    getCompanySettings() {\r\n        this.coreService.getCompanySettings()\r\n            .subscribe(res => {\r\n                if (res.Data) {\r\n\r\n                    this.BackgroundImageUrlForLogin = res.Data.BackgroundImageUrlForLogin;\r\n                    $('body').css({ 'background-image': 'url(' + this.BackgroundImageUrlForLogin + ')', 'background-repeat': 'no-repeat' });\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Add class in body tag\r\n        this.body = document.getElementsByTagName('body')[0];\r\n        this.body.classList.add(\"account-theme\");\r\n        this.getCompanySettings();\r\n    }\r\n\r\n    // Remove class from body tag\r\n    ngOnDestroy() {\r\n        this.body = document.getElementsByTagName('body')[0];\r\n        this.body.classList.remove(\"account-theme\");\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/forgot-password/forgot-password.component.ts","module.exports = \"<div class=\\\"app-main-container\\\">\\r\\n    <nav class=\\\"app-header\\\">\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"header-left\\\">\\r\\n                <div class=\\\"brand-containter\\\">\\r\\n                    <div class=\\\"logo-secondary\\\">\\r\\n                        <img src=\\\"{{headerLogo}}\\\" class=\\\"img-responsive\\\" />\\r\\n                    </div>\\r\\n                    <div class=\\\"logo\\\"><span>{{headerAppName}}</span></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"header-right\\\">\\r\\n                <ul class=\\\"nav\\\">\\r\\n                    <li class=\\\"nav-items-user-info\\\">\\r\\n                        <a  href=\\\"javascript:void(0)\\\">\\r\\n                            <span *ngIf=\\\"isShow\\\" class=\\\"user-picture\\\" [ngStyle]=\\\"{'background-image': 'url(' + userProfile.ProfileImageUrl + ')'}\\\"></span>\\r\\n                            <span class=\\\"user-name hidden-xs\\\">{{userProfile.FirstName}} {{userProfile.LastName}}</span>\\r\\n                            <i class=\\\"material-icons\\\">expand_more</i>\\r\\n                        </a>\\r\\n                        <ul class=\\\"user-profile-dropdown\\\">\\r\\n                            <li *ngIf=\\\"userProfile.Role!='Admin'\\\"><a href=\\\"javascript:void(0)\\\" (click)=\\\"navigateToProfile()\\\"><i class=\\\"material-icons\\\">account_circle</i>My Profile</a>\\r\\n                            <li><a (click)=\\\"logout()\\\" href=\\\"javascript:void(0)\\\"><i class=\\\"material-icons\\\">power_settings_new</i> Log Out</a></li>\\r\\n                        </ul>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </nav>\\r\\n\\r\\n    <div class=\\\"app-sub-header\\\">\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"side-menu-toggle-button\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"navigation\\\" (click)=\\\"sidbarToggle()\\\">\\r\\n                    <span></span>\\r\\n                    <span></span>\\r\\n                    <span></span>\\r\\n                </button>\\r\\n                <span>MENU</span>\\r\\n            </div>\\r\\n            <subheader class=\\\"right-block-holder\\\" [headerData]=\\\"headerData\\\"></subheader>\\r\\n        </div>\\r\\n    </div>\\r\\n    <app-sidenav></app-sidenav>\\r\\n    <div class=\\\"content\\\">\\r\\n        <main class=\\\"app-main-content\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </main>\\r\\n        <!--<app-footer></app-footer>-->\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/header/header.component.html\n// module id = ../../../../../src/app/core/header/header.component.html\n// module chunks = core.module","import { Component,AfterViewInit, OnDestroy } from '@angular/core'\r\nimport {Router} from '@angular/router'\r\nimport { UserProfile , CommonServices , UserRoles } from './../../common'\r\nimport { HeaderService } from '../services/header.sevice';\r\nimport { AdminService } from '../../Admin/services/admin.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: 'header.component.html'\r\n})\r\n\r\nexport class HeaderComponent implements AfterViewInit, OnDestroy {\r\n    ngAfterViewInit(): void {\r\n        \r\n        \r\n    }\r\n    openSidebar: boolean = true;\r\n    body: any;\r\n    isShow : boolean = true;\r\n    userProfile = UserProfile;\r\n    headerData: any;\r\n    headerAppName: string;\r\n    headerLogo: string;\r\n    headerValuesSubscription: Subscription;\r\n\r\n    constructor(private router: Router, public commonServices: CommonServices, private _headerService: HeaderService, private _adminService: AdminService) {\r\n\r\n    }\r\n\r\n    \r\n\r\n    // Open close sidebar menu\r\n    ngOnInit() {\r\n        let that = this;\r\n        this.body = document.getElementsByTagName('body')[0];\r\n        this.body.classList.remove(\"open-sidebar\");\r\n        this.body.classList.add(\"close-sidebar\");\r\n\r\n        this.commonServices.userImage$.subscribe(res => {\r\n            if (res != '') {\r\n                that.isShow = false;\r\n                UserProfile.ProfileImageUrl = res;\r\n                this.userProfile = UserProfile;\r\n                setTimeout(function () {\r\n                    that.isShow = true;\r\n                }, 1);\r\n            }\r\n            \r\n        })\r\n\r\n        this.commonServices.userProfile$.subscribe(res => {\r\n            if (res['FirstName'] != undefined) {\r\n                UserProfile.FirstName = res['FirstName'];\r\n                UserProfile.LastName = res['LastName'];\r\n            }\r\n            else if (localStorage.getItem('authorization') )\r\n            {\r\n                UserProfile.FirstName = JSON.parse(localStorage.getItem('authorization'))['FirstName'];\r\n                UserProfile.LastName = JSON.parse(localStorage.getItem('authorization'))['LastName'];\r\n            }\r\n            else {\r\n                UserProfile.FirstName = '';\r\n                UserProfile.LastName = '';\r\n            }\r\n            this.userProfile = UserProfile;\r\n        })\r\n         \r\n         this._headerService.ChildChanges$.subscribe(\r\n             res => {\r\n                 this.headerData = res;\r\n            });\r\n\r\n        this._adminService.getCompanySettings().subscribe((res) => {\r\n            if (res.Data) {\r\n                this.headerAppName = res.Data.AppName;\r\n                this.headerLogo = res.Data.HeaderLogo;\r\n            }\r\n        })\r\n\r\n        this.headerValuesSubscription = this.commonServices.getHeaderValues().subscribe((headerValues) => {\r\n            if (headerValues) {\r\n                this.headerAppName = headerValues.HeaderAppName;\r\n                this.headerLogo = headerValues.HeaderLogo;\r\n            }\r\n        });\r\n \r\n\r\n    }\r\n\r\n    sidbarToggle() {\r\n        this.openSidebar = !this.openSidebar;\r\n        if (this.openSidebar) {\r\n            this.body = document.getElementsByTagName('body')[0];\r\n            this.body.classList.remove(\"open-sidebar\");\r\n            this.body.classList.add(\"close-sidebar\");\r\n        } else {\r\n            this.body = document.getElementsByTagName('body')[0];\r\n            this.body.classList.remove(\"close-sidebar\");\r\n            this.body.classList.add(\"open-sidebar\");\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        if (confirm(\"Are you sure you want to logout?\")) {\r\n            localStorage.removeItem('authorization');\r\n            this.router.navigate(['/login'])\r\n        }\r\n       \r\n    }\r\n\r\n    navigateToProfile(){\r\n          if(UserProfile.Role == UserRoles.Admin.toString()){\r\n               this.router.navigate(['admin/userprofile'])\r\n          }else{\r\n              this.router.navigate(['userprofile'])\r\n          }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.headerValuesSubscription.unsubscribe();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/header/header.component.ts","export {LoginComponent } from './login/login.component'\r\nexport { ForgotPassword } from './forgot-password/forgot-password.component'\r\nexport { ResetPasswordComponent } from './reset-password/reset-password.component'\r\nexport {CoreService} from './services/core.service'\r\nexport {TFSTokenComponent} from './vsts-token/tfs-token'\r\nexport { HeaderComponent } from './header/header.component'\r\nexport { CreatePasswordComponent } from './create-password/create-password.component'\r\n\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/index.ts","module.exports = \"<div class=\\\"container container-account\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n    \\r\\n        <div class=\\\"col-lg-8 col-md-12\\\">\\r\\n            <div class=\\\"card-group\\\">\\r\\n                <div class=\\\"card p-4\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <h1>{{'CoreModule.Label.Login' | translate}}</h1>\\r\\n                        <p>{{'CoreModule.Label.SignIn' | translate}} </p>\\r\\n\\r\\n                        <form class=\\\"login-form\\\" [formGroup]=\\\"loginForm\\\" (submit)=\\\"doLogin()\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Username\\\" placeholder=\\\"{{'CoreModule.Placeholder.UserName' | translate}}\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\" placeholder=\\\"{{'CoreModule.Placeholder.Password' | translate}}\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <a class=\\\"btn btn-link px-0\\\" routerLink=\\\"/forgot-password\\\">{{'CoreModule.Button.ForgotPassword' | translate}}</a>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{'CoreModule.Button.Login' | translate}}</button>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"col text-right\\\">\\r\\n                                    <button class=\\\"btn btn-primary\\\"  type=\\\"button\\\" (click)=\\\"LoginAsAdmin()\\\">{{'CoreModule.Button.LoginAsAdmin' | translate}}</button>\\r\\n                                    \\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                    <!--<div class=\\\"col-6\\\">\\r\\n                        <button class=\\\"btn btn-primary px-4\\\" (click)=\\\"LoginAsAdmin()\\\">{{'CoreModule.Button.LoginAsAdmin' | translate}}</button>\\r\\n                    </div>-->\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"card v-divider text-white py-2 d-md-down-none\\\">\\r\\n                    <div class=\\\"card-body d-flex align-items-center text-center justify-content-center\\\">\\r\\n                        <div>\\r\\n                            <img src=\\\"{{CompanyPic}}\\\" class=\\\"img-thumbnail\\\" alt=\\\"Company Image\\\"  />\\r\\n                           \\r\\n                            <p class=\\\"py-2\\\">{{CompanyMessage}}</p>\\r\\n                          \\r\\n                            <!--<a  class=\\\"btn btn-link px-0 active\\\" routerlink=\\\"/forgot-password\\\">Reset password</a>-->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/login/login.component.html\n// module id = ../../../../../src/app/core/login/login.component.html\n// module chunks = core.module","import { Component } from '@angular/core'\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms'\r\nimport { Router } from '@angular/router';\r\nimport { CoreService } from '../services/core.service'\r\nimport { UserRoles, DataModel , CommonServices } from '../../common';\r\nimport { error } from 'util';\r\ndeclare var jquery: any;\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: 'login.component.html'\r\n})\r\n\r\nexport class LoginComponent {\r\n    body: any;\r\n    loginForm: FormGroup;\r\n    CompanyPic: any;\r\n    CompanyMessage: \"\";\r\n    BackgroundImageUrlForLogin=\"\"\r\n\r\n\r\n    constructor(public coreService: CoreService, public fb: FormBuilder, public router: Router , private commonServices : CommonServices) {\r\n\r\n        this.loginForm = this.fb.group({\r\n            Username: [''],\r\n            Password: ['']\r\n        })\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        // Add class in body tag\r\n        this.body = document.getElementsByTagName('body')[0];\r\n        this.body.classList.add(\"account-theme\");\r\n        this.getCompanySettings();\r\n       \r\n    }\r\n\r\n    // Remove class from body tag\r\n    ngOnDestroy() {\r\n        this.body = document.getElementsByTagName('body')[0];\r\n        this.body.classList.remove(\"account-theme\");\r\n    }\r\n\r\n    getCompanySettings() {\r\n        this.coreService.getCompanySettings()\r\n            .subscribe(res => {\r\n                if (res.Data) {\r\n                    this.CompanyPic = res.Data.CompanyLogo;\r\n                    this.CompanyMessage = res.Data.CompanyMessage;\r\n                    this.BackgroundImageUrlForLogin = res.Data.BackgroundImageUrlForLogin;\r\n                    $('body').css({ 'background-image': 'url(' + this.BackgroundImageUrlForLogin + ')', 'background-repeat': 'no-repeat', 'background-size': 'cover' });\r\n                }\r\n            });\r\n    }\r\n\r\n    doLogin() {\r\n        this.coreService.login(this.loginForm.value).subscribe(res => {\r\n            if (res) {\r\n                let UserObject = Object.assign({ Username: res.Data.User.Username, UserId : res.Data.User.UserId , FirstName : res.Data.User.FirstName, LastName : res.Data.User.LastName , ProfileImageUrl :  res.Data.User.ProfileImageUrl, ProjectList: res.Data.User.ProjectList, isTokenGenerate: true })\r\n                let userObject = Object.assign({ token: JSON.parse(res.Data.Access_Token)['auth_token'], role: res.Data.User.UserRole }, UserObject);\r\n                DataModel.UserRole = res.Data.User.UserRole;\r\n                if (res.Data.User.UserRole == UserRoles.Admin) {\r\n                    localStorage.setItem('authorization', JSON.stringify(userObject));\r\n                    this.commonServices.load();\r\n                    this.router.navigateByUrl('admin/dashboard');\r\n                }\r\n                else {\r\n                    let selectedProjectId = res.Data.User.ProjectList ? res.Data.User.ProjectList[0].Id : 0;\r\n                    DataModel.ProjectId = selectedProjectId;\r\n                     Object.assign(userObject, { selectedProjectId: selectedProjectId });\r\n                    localStorage.setItem('authorization', JSON.stringify(userObject));\r\n                     this.commonServices.load();\r\n                    this.router.navigate(['/dashboard']);\r\n                   \r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    LoginAsAdmin() {\r\n        this.coreService.LoginAsAdmin().subscribe(res => {\r\n            window.location.href = res.Data;\r\n        }, (error) => {});\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/login/login.component.ts","module.exports = \"\\r\\n<div class=\\\"container container-account\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-md-10 col-lg-5\\\">\\r\\n            <div class=\\\"card-group\\\">\\r\\n                <div class=\\\"card p-4\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <h1>{{'CoreModule.Label.Reset' | translate}}</h1>\\r\\n                        <p>{{'CoreModule.Label.NewPassword' | translate}}</p>\\r\\n\\r\\n                        <div [formGroup]=\\\"resetPasswordForm\\\">\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input [ngClass]=\\\"{'is-invalid' : resetPasswordForm.controls['Password'].touched && resetPasswordForm.controls['Password'].invalid}\\\" formControlName=\\\"Password\\\" placeholder=\\\"{{'CoreModule.Placeholder.Password' | translate}}\\\" class=\\\"form-control\\\" type=\\\"password\\\">\\r\\n                                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"resetPasswordForm.controls['Password'].touched && resetPasswordForm.controls['Password'].hasError('required')\\\">\\r\\n                                    {{'CoreModule.Validations.PasswordRequired' | translate}}\\r\\n                                </div>\\r\\n                                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"!resetPasswordForm.controls['Password'].hasError('required') && resetPasswordForm.controls['Password'].touched && resetPasswordForm.controls['Password'].hasError('passwordFormat')\\\">\\r\\n                                    {{'CoreModule.Validations.PasswordFormat' | translate}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            \\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input [ngClass]=\\\"{'is-invalid' : resetPasswordForm.controls['ConfirmPassword'].touched && resetPasswordForm.controls['ConfirmPassword'].invalid}\\\" formControlName=\\\"ConfirmPassword\\\" placeholder=\\\"{{'CoreModule.Placeholder.ConfirmPassword' | translate}}\\\" class=\\\"form-control\\\" type=\\\"password\\\">\\r\\n                                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"resetPasswordForm.controls['ConfirmPassword'].touched && resetPasswordForm.controls['ConfirmPassword'].hasError('required')\\\">\\r\\n                                    {{'CoreModule.Validations.Required' | translate}}\\r\\n                                </div>\\r\\n                                <div class=\\\"form-text text-danger\\\" *ngIf=\\\"resetPasswordForm.controls['ConfirmPassword'].touched && !resetPasswordForm.controls['ConfirmPassword'].hasError('required') && resetPasswordForm.hasError('match') \\\">\\r\\n                                    {{'CoreModule.Validations.MatchPassword' | translate}}\\r\\n                                </div>\\r\\n                            </div>\\r\\n                           \\r\\n                            <div>\\r\\n                                <input class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"resetPasswordForm.invalid\\\" value=\\\"{{'CoreModule.Button.Reset' | translate}}\\\" (click)=\\\"resetPassword()\\\">\\r\\n\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/reset-password/reset-password.component.html\n// module id = ../../../../../src/app/core/reset-password/reset-password.component.html\n// module chunks = core.module","import { Component , OnInit } from '@angular/core';\r\nimport { CoreService } from '../services/core.service';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Validations } from '../../common';\r\ndeclare var jquery: any;\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'reset-password',\r\n    templateUrl: 'reset-password.component.html'\r\n})\r\n\r\nexport class ResetPasswordComponent implements  OnInit {\r\n    \r\n    body: any;\r\n    resetPasswordForm: FormGroup;\r\n    token: any;\r\n    userId: any;\r\n    isSuccess: any = false;\r\n    BackgroundImageUrlForLogin: any = \"\";\r\n    \r\n\r\n    constructor(private coreService: CoreService, public fb: FormBuilder, private activatedRoute: ActivatedRoute, private router: Router, private customValidation: Validations) {\r\n        this.resetPasswordForm = this.fb.group({\r\n            UserId: [''],\r\n            Password: ['', Validators.compose([Validators.required, Validators.minLength(6), customValidation.validatePassword])],\r\n            ConfirmPassword: ['', Validators.required],\r\n            Token:['']\r\n        }, { validator: customValidation.matchPassword })\r\n       \r\n\r\n    }\r\n    \r\n\r\n    ngOnInit(): void {\r\n        \r\n        // subscribe to router event\r\n        this.activatedRoute.queryParams .subscribe((params: Params) => {\r\n            this.token = params['token'];\r\n            this.userId = params['userId'];\r\n           \r\n        });\r\n\r\n        // Add class in body tag\r\n        this.body = document.getElementsByTagName('body')[0];\r\n        this.body.classList.add(\"account-theme\");\r\n        this.getCompanySettings();\r\n    }\r\n    getCompanySettings() {\r\n        this.coreService.getCompanySettings()\r\n            .subscribe(res => {\r\n                if (res.Data) {\r\n                  ;\r\n                    this.BackgroundImageUrlForLogin = res.Data.BackgroundImageUrlForLogin;\r\n                    $('body').css({ 'background-image': 'url(' + this.BackgroundImageUrlForLogin + ')', 'background-repeat': 'no-repeat' });\r\n                }\r\n            });\r\n    }\r\n\r\n    // Remove class from body tag\r\n    ngOnDestroy() {\r\n        this.body = document.getElementsByTagName('body')[0];\r\n        this.body.classList.remove(\"account-theme\");\r\n    }\r\n\r\n    resetPassword() {\r\n\r\n        this.resetPasswordForm.patchValue({ Token: this.token, UserId:this.userId});\r\n        this.coreService.resetPassword(this.resetPasswordForm.value).subscribe(res => {\r\n              if(res){\r\n                  this.router.navigate(['/login'])\r\n              }\r\n        })\r\n       \r\n    }\r\n   \r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/reset-password/reset-password.component.ts","import { Injectable } from '@angular/core'\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs'\r\nimport { retry } from 'rxjs/operators/retry';\r\n\r\n@Injectable()\r\nexport class CoreService {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    login(data: any): Observable<any> {\r\n        let body = `username=${data.Username}&password=${encodeURIComponent(data.Password)}`;\r\n        return this.http.post('/token', body);\r\n    }\r\n\r\n    sendForgotPasswordLink(data: any): Observable<any> {\r\n        return this.http.post('/api/account/sendpasswordresetlink?username='+data.Username,data);\r\n    }\r\n\r\n    resetPassword(data: any): Observable<any> {\r\n        return this.http.post('/api/account/resetPassword', data);\r\n    }\r\n\r\n     generateToken(data: any): Observable<any> {\r\n        return this.http.post('/api/account/generatetfstoken', data );\r\n    }\r\n\r\n     createPassword(data: any): Observable<any> {\r\n         return this.http.post('/api/account/createuserPassword', data);\r\n     }\r\n     getCompanySettings(): Observable<any> {\r\n         return this.http.get('api/account/getcompanysettings');\r\n    }\r\n\r\n    LoginAsAdmin(): Observable<any> {\r\n        return this.http.get(\"api/account/loginasadmin\");\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/services/core.service.ts","module.exports = \"<div *ngIf=\\\"headerData\\\" class=\\\"right-block\\\">\\r\\n    <span>{{headerData.Title}}</span>\\r\\n    <button *ngFor=\\\"let button of headerData.buttons\\\" [disabled]=\\\"button.disabled\\\" class=\\\"btn btn-success text-uppercase\\\" type=\\\"button\\\" (click)=\\\"performAction(button.actionType)\\\"><i *ngIf=\\\"button.isIcon\\\" class=\\\"material-icons\\\">{{button.iconText}}</i> {{button.type}}</button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/sub-header/sub-header.component.html\n// module id = ../../../../../src/app/core/sub-header/sub-header.component.html\n// module chunks = core.module","import { Component,Input,Output, EventEmitter } from '@angular/core'\r\nimport { HeaderService } from '../services/header.sevice';\r\n\r\n@Component({\r\n    selector: 'subheader',\r\n    templateUrl: 'sub-header.component.html'\r\n})\r\nexport class NewHeaderComponent {\r\n\r\n   @Input() headerData: any;\n\r\n\r\n    constructor(private _headerService:HeaderService) {\r\n\r\n    }\r\n\r\n    \n    performAction(type:any) {\r\n        \r\n        this._headerService.emitHeaderChanges(type);\r\n\r\n    }\n\n\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/sub-header/sub-header.component.ts","import { Component } from '@angular/core'\r\nimport { ActivatedRoute, Router } from '@angular/router'\r\nimport { CoreService } from '../services/core.service'\r\nimport { error } from 'selenium-webdriver';\r\nimport { DataModel, CommonServices} from '../../common';\r\n\r\n@Component({\r\n    selector : 'app-tfs-token',\r\n    template :`Redirecting to Neela ...`\r\n})\r\n\r\nexport class TFSTokenComponent{\r\n    tokenObject: any = {}\r\n    constructor(private activatedRoute: ActivatedRoute, private coreService: CoreService, private router: Router, private commonServices: CommonServices) {\r\n\r\n}\r\n\r\nngOnInit(){\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n        this.tokenObject = {\r\n           Code : params['code'],\r\n           State : params['state']\r\n        }\r\n\r\n        this.coreService.generateToken(this.tokenObject).subscribe(res => {\r\n        if (res) {\r\n            let UserObject = Object.assign({ Username: res.Data.User.Username, UserId: res.Data.User.UserId, FirstName: res.Data.User.FirstName, LastName: res.Data.User.LastName, ProfileImageUrl: res.Data.User.ProfileImageUrl, ProjectList: res.Data.User.ProjectList, isTokenGenerate: true })\r\n            let userObject = Object.assign({ token: JSON.parse(res.Data.Access_Token)['auth_token'], role: res.Data.User.UserRole }, UserObject);\r\n            DataModel.UserRole = res.Data.User.UserRole;\r\n            localStorage.setItem('authorization', JSON.stringify(userObject));\r\n            this.commonServices.load();\r\n\r\n            this.router.navigateByUrl('admin/dashboard');\r\n        }\r\n    }, (error) => {\r\n        debugger\r\n        localStorage.removeItem('authorization')\r\n        this.router.navigateByUrl('/login');\r\n    });\r\n\r\n})\r\n\r\n}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// E:/DM Projects/Neela/trunk/VSTDesk/src/app/core/vsts-token/tfs-token.ts"],"sourceRoot":"webpack:///"}